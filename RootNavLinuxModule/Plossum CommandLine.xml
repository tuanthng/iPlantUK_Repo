<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Plossum CommandLine</name>
    </assembly>
    <members>
        <member name="T:Plossum.ColumnInfo">
            <summary>
            Represents a column to be used with <see cref="M:Plossum.StringFormatter.FormatInColumns(System.Int32,System.Int32,Plossum.ColumnInfo[])" />.
            </summary></member>
        <member name="M:Plossum.ColumnInfo.#ctor(System.Int32,System.String,Plossum.Alignment,Plossum.VerticalAlignment,Plossum.WordWrappingMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.ColumnInfo" /> struct.
            </summary>
            <param name="width">The width of the column in (fixed-width) characters.</param>
            <param name="content">The content of this column.</param>
            <param name="alignment">The alignment to use for this column.</param>
            <param name="verticalAlignment">The vertical alignment to use for this column</param>
            <param name="method">The word wrapping method to use for this column</param></member>
        <member name="M:Plossum.ColumnInfo.#ctor(System.Int32,System.String,Plossum.Alignment,Plossum.VerticalAlignment)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.ColumnInfo" /> struct.
            </summary>
            <param name="width">The width of the column in (fixed-width) characters.</param>
            <param name="content">The content of this column.</param>
            <param name="alignment">The alignment to use for this column.</param>
            <param name="verticalAlignment">The vertical alignment to use for this column</param></member>
        <member name="M:Plossum.ColumnInfo.#ctor(System.Int32,System.String,Plossum.Alignment)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.ColumnInfo" /> struct.
            </summary>
            <param name="width">The width of the column in (fixed-width) characters.</param>
            <param name="content">The content of this column.</param>
            <param name="alignment">The alignment to use for this column.</param>
            <remarks>The word wrapping method used will be the one described by <see cref="F:Plossum.WordWrappingMethod.Optimal" />.</remarks></member>
        <member name="M:Plossum.ColumnInfo.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.ColumnInfo" /> struct.
            </summary>
            <param name="width">The width of the column in (fixed-width) characters.</param>
            <param name="content">The content of this column.</param>
            <remarks>The word wrapping method used will be the one described by <see cref="F:Plossum.WordWrappingMethod.Optimal" />, and
            each line in this column will be left aligned.</remarks></member>
        <member name="M:Plossum.ColumnInfo.op_Equality(Plossum.ColumnInfo,Plossum.ColumnInfo)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>The result of the operator.</returns></member>
        <member name="M:Plossum.ColumnInfo.op_Inequality(Plossum.ColumnInfo,Plossum.ColumnInfo)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>The result of the operator.</returns></member>
        <member name="M:Plossum.ColumnInfo.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns></member>
        <member name="M:Plossum.ColumnInfo.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns></member>
        <member name="P:Plossum.ColumnInfo.Width">
            <summary>
            Gets the width of this column in fixed width characters.
            </summary>
            <value>the width of this column in fixed width characters.</value></member>
        <member name="P:Plossum.ColumnInfo.Content">
            <summary>
            Gets the content of this column.
            </summary>
            <value>The content of this column.</value></member>
        <member name="P:Plossum.ColumnInfo.Alignment">
            <summary>
            Gets the alignment of this column.
            </summary>
            <value>The alignment of this column.</value></member>
        <member name="P:Plossum.ColumnInfo.WordWrappingMethod">
            <summary>
            Gets the word wrapping method to use for this column.
            </summary>
            <value>The the word wrapping method to use for this column.</value></member>
        <member name="P:Plossum.ColumnInfo.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the contents of this column.
            </summary>
            <value>The vertical alignment of this column.</value></member>
        <member name="T:Plossum.Alignment">
            <summary>
            Represents the alignment of text for use with <see cref="T:Plossum.StringFormatter" />
            </summary></member>
        <member name="F:Plossum.Alignment.Left">
            <summary>
            Text will be left aligned
            </summary></member>
        <member name="F:Plossum.Alignment.Right">
            <summary>
            Text will be right aligned
            </summary></member>
        <member name="F:Plossum.Alignment.Center">
            <summary>
            Text will be centered within the specified field
            </summary></member>
        <member name="F:Plossum.Alignment.Justified">
            <summary>
            Spaces between words will be expanded so the string takes up the full width of the field.
            </summary></member>
        <member name="T:Plossum.CommandLine.InvalidOptionValueException">
            <summary>
            Exception that may be thrown by the setter method of a property or a method attributed with the <see cref="T:Plossum.CommandLine.CommandLineOptionAttribute" />.
            </summary>
            <remarks>Throwing this exception from a setter method of a property or a method with the attribute <see cref="T:Plossum.CommandLine.CommandLineOptionAttribute" />
            will cause the command line parser to insert an error message indicating that there was an error on the command line, after which it
            will continue to parse the rest of the command line. The error can later be retrieved using the property <see cref="P:Plossum.CommandLine.CommandLineParser.Errors" />.
            </remarks></member>
        <member name="M:Plossum.CommandLine.InvalidOptionValueException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.InvalidOptionValueException" /> class.
            </summary></member>
        <member name="M:Plossum.CommandLine.InvalidOptionValueException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.InvalidOptionValueException" /> class.
            </summary>
            <param name="message">The message.</param></member>
        <member name="M:Plossum.CommandLine.InvalidOptionValueException.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.InvalidOptionValueException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="includeDefaultMessage">if set to <c>true</c> a default message will be prefixed to the error message specified, which
            will be something similar to "Invalid value &lt;value&gt; for option &lt;optionName&gt;: ".</param></member>
        <member name="M:Plossum.CommandLine.InvalidOptionValueException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.InvalidOptionValueException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param></member>
        <member name="M:Plossum.CommandLine.InvalidOptionValueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.InvalidOptionValueException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception></member>
        <member name="M:Plossum.CommandLine.InvalidOptionValueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The info parameter is a null reference (Nothing in Visual Basic). </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter" /></PermissionSet></member>
        <member name="P:Plossum.CommandLine.InvalidOptionValueException.InlcudeDefaultMessage">
            <summary>
            Gets a value indicating whether the default message will be included in the error list supplied by <see cref="P:Plossum.CommandLine.CommandLineParser.Errors" />.
            </summary>
            <value>
            	<c>true</c> if the default message is included in the error list supplied by <see cref="P:Plossum.CommandLine.CommandLineParser.Errors" />; otherwise, <c>false</c>.
            </value></member>
        <member name="T:Plossum.VerticalAlignment">
            <summary>
            Represents the vertical alignment to use for methods in <see cref="T:Plossum.StringFormatter" />.
            </summary></member>
        <member name="F:Plossum.VerticalAlignment.Top">
            <summary>
            Indicates that the text should be aligned to the top of the field
            </summary></member>
        <member name="F:Plossum.VerticalAlignment.Bottom">
            <summary>
            Indicates that the text should be aligned to the bottom of the field
            </summary></member>
        <member name="F:Plossum.VerticalAlignment.Middle">
            <summary>
            Indicates that the text should be aligned to the (vertical) middle of the field
            </summary></member>
        <member name="T:Plossum.Cropping">
            <summary>
            Specifies how strings will be cropped in case they are too long for the specified field. Used by <see cref="T:Plossum.StringFormatter" />.
            </summary></member>
        <member name="F:Plossum.Cropping.Left">
            <summary>
            The left hand side of the string will be cropped, and only the rightmost part of the string will remain.
            </summary></member>
        <member name="F:Plossum.Cropping.Right">
            <summary>
            The right hand side of the string will be cropped, and only the leftmost part of the string will remain.
            </summary></member>
        <member name="F:Plossum.Cropping.Both">
            <summary>
            Both ends of the string will be cropped and only the center part will remain.
            </summary></member>
        <member name="T:Plossum.WordWrappingMethod">
            <summary>
            Represents the word wrapping method to use for various operations performed by <see cref="T:Plossum.StringFormatter" />.
            </summary></member>
        <member name="F:Plossum.WordWrappingMethod.Greedy">
            <summary>
            Uses a greedy algorithm for performing the word wrapping,
            that puts as many words on a line as possible, then moving on to the next line to do the
            same until there are no more words left to place.
            </summary>
            <remarks>This is the fastest method, but will often create a less esthetically pleasing result than the
            <see cref="F:Plossum.WordWrappingMethod.Optimal" /> method.</remarks></member>
        <member name="F:Plossum.WordWrappingMethod.Optimal">
            <summary>
            Uses an algorithm attempting to create an optimal solution of breaking the lines, where the optimal solution is the one
            where the remaining space on the end of each line is as small as possible.
            </summary>
            <remarks>This method creates esthetically more pleasing results than those created by the <see cref="F:Plossum.WordWrappingMethod.Greedy" /> method,
            but it does so at a significantly slower speed.  This method will work fine for wrapping shorter strings for console
            output, but should probably not be used for a real time WYSIWYG word processor or something similar.</remarks></member>
        <member name="T:Plossum.CommandLine.OptionGroupInfo">
            <summary>
            Represents the descriptive properties of an option group.
            </summary></member>
        <member name="M:Plossum.CommandLine.OptionGroupInfo.#ctor(Plossum.CommandLine.UsageInfo,Plossum.CommandLine.OptionGroup,Plossum.CommandLine.OptionStyles)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.OptionGroupInfo" /> class.
            </summary>
            <param name="usageInfo">The <see cref="T:Plossum.CommandLine.UsageInfo" /> containing this <see cref="T:Plossum.CommandLine.OptionGroupInfo" /></param>
            <param name="optionGroup">The option group.</param>
            <param name="optionStyles">The option styles.</param></member>
        <member name="P:Plossum.CommandLine.OptionGroupInfo.Options">
            <summary>
            Gets an enumeration of the options included in this group.
            </summary>
            <value>an enumeration of the options included in this group.</value></member>
        <member name="P:Plossum.CommandLine.OptionGroupInfo.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value></member>
        <member name="P:Plossum.CommandLine.OptionGroupInfo.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value></member>
        <member name="P:Plossum.CommandLine.OptionGroupInfo.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value></member>
        <member name="M:Plossum.CommandLine.OptionGroupInfo.ToString(System.Int32,System.Int32,System.Int32)">
            <summary>
            Retrieves a formatted string describing this option group and its options, suitable for displaying
            to the user as a help message.
            </summary>
            <param name="indent">The indentation to use.</param>
            <param name="nameColumnWidth">Width of the name column.</param>
            <param name="descriptionColumnWidth">Width of the description column.</param>
            <returns>a formatted string describing this option group and its options, suitable for displaying
            to the user as a help message.</returns></member>
        <member name="M:Plossum.CommandLine.OptionGroupInfo.GetOption(System.String)">
            <summary>
            Gets the option with the specified name from this group.
            </summary>
            <param name="optionName">Name of the option.</param>
            <returns>the option with the specified name from this group if one exists; otherwise a null reference is returned.</returns></member>
        <member name="T:Plossum.CommandLine.UsageInfo">
            <summary>
            Represents the properties of a <see cref="T:Plossum.CommandLine.CommandLineManagerAttribute" /> (or rather the object to which its
            applied) that describe the command line syntax.
            </summary>
            <remarks>This class is the only way to programatically set usage descriptions, group names and similar, which
            is required if globalization of the usage description is desired.  Users can not instantiate objects of this
            class, but they are retrieved by the <see cref="P:Plossum.CommandLine.CommandLineParser.UsageInfo" /> property.</remarks></member>
        <member name="M:Plossum.CommandLine.UsageInfo.#ctor(System.Collections.Generic.IEnumerable{C5.KeyValuePair{System.String,Plossum.CommandLine.IOption}},Plossum.CommandLine.OptionStyles,Plossum.CommandLine.CommandLineParser)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.UsageInfo" /> class.
            </summary>
            <param name="options">The options.</param>
            <param name="optionStyles">The option styles.</param>
            <param name="parser">The parser.</param></member>
        <member name="P:Plossum.CommandLine.UsageInfo.ApplicationName">
            <summary>
            Gets or sets the name of the application.
            </summary>
            <value>The name of the application.</value></member>
        <member name="P:Plossum.CommandLine.UsageInfo.ApplicationVersion">
            <summary>
            Gets or sets the application version.
            </summary>
            <value>The application version.</value></member>
        <member name="P:Plossum.CommandLine.UsageInfo.ApplicationCopyright">
            <summary>
            Gets or sets the application copyright.
            </summary>
            <value>The application copyright.</value></member>
        <member name="P:Plossum.CommandLine.UsageInfo.ApplicationDescription">
            <summary>
            Gets or sets the application description.
            </summary>
            <value>The application description.</value></member>
        <member name="P:Plossum.CommandLine.UsageInfo.Options">
            <summary>
            Gets an enumeration of <see cref="T:Plossum.CommandLine.OptionInfo" /> objects describing the options of this
            command line manager that are <i>not</i> part of any option group.
            </summary>
            <value>an enumeration of <see cref="T:Plossum.CommandLine.OptionInfo" /> objects describing the options of this
            command line manager that are <i>not</i> part of any option group.</value></member>
        <member name="P:Plossum.CommandLine.UsageInfo.Groups">
            <summary>
            Gets an enumeration of the <see cref="T:Plossum.CommandLine.OptionGroupInfo" /> objects describin the option groups
            of this command line manager.
            </summary>
            <value>an enumeration of the <see cref="T:Plossum.CommandLine.OptionGroupInfo" /> objects describin the option groups
            of this command line manager.</value></member>
        <member name="P:Plossum.CommandLine.UsageInfo.ColumnSpacing">
            <summary>
            Gets or sets the column spacing to use for any string formatting involving multiple columns.
            </summary>
            <value>The column spacing used for any string formatting involving multiple columns.</value></member>
        <member name="P:Plossum.CommandLine.UsageInfo.IndentWidth">
            <summary>
            Gets or sets the width of the indent to use for any string formatting by this <see cref="T:Plossum.CommandLine.UsageInfo" />.
            </summary>
            <value>the width of the indent to use for any string formatting by this <see cref="T:Plossum.CommandLine.UsageInfo" />.</value></member>
        <member name="M:Plossum.CommandLine.UsageInfo.GetOption(System.String)">
            <summary>
            Gets the option with the specified name.
            </summary>
            <param name="name">The name of the option to retrieve.</param>
            <returns>The option in the option manager described by this object with the specified name, or
            a null reference if no such option exists.</returns></member>
        <member name="M:Plossum.CommandLine.UsageInfo.GetGroup(System.String)">
            <summary>
            Gets the option group with the specified id.
            </summary>
            <param name="id">The id of the option group to retrieve.</param>
            <returns>The option group with the specified id of the option manager described
            by this object, or a null reference if no such option group exists.</returns></member>
        <member name="M:Plossum.CommandLine.UsageInfo.GetHeaderAsString(System.Int32)">
            <summary>
            Gets a string consisting of the program name, version and copyright notice.
            </summary>
            <param name="width">The total width in characters in which the string should be fitted</param>
            <returns>a string consisting of the program name, version and copyright notice.</returns>
            <remarks>This string is suitable for printing as the first output of a console application.</remarks></member>
        <member name="M:Plossum.CommandLine.UsageInfo.GetOptionsAsString(System.Int32)">
            <summary>
            Gets a formatted string describing the options and groups available.
            </summary>
            <param name="width">The maximum width of each line in the returned string.</param>
            <returns>A formatted string describing the options available in this parser</returns>
            <exception cref="T:System.ArgumentException">The specified width was too small to generate the requested list.</exception></member>
        <member name="M:Plossum.CommandLine.UsageInfo.GetOptionsAsString(System.Int32,System.Int32)">
            <summary>
            Gets a string describing all the options of this option manager. Usable for displaying as a help
            message to the user, provided that descriptions for all options and groups are provided.
            </summary>
            <param name="nameColumnWidth">The width in characters of the column holding the names of the options.</param>
            <param name="descriptionColumnWidth">The width in characters of the column holding the descriptions of the options.</param>
            <returns>A string describing all the options of this option manager.</returns></member>
        <member name="M:Plossum.CommandLine.UsageInfo.GetErrorsAsString(System.Int32)">
            <summary>
            Gets the list of errors as a formatted string.
            </summary>
            <param name="width">The width of the field in which to format the error list.</param>
            <returns>The list of errors formatted inside a field of the specified <paramref name="width" /></returns></member>
        <member name="M:Plossum.CommandLine.UsageInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
            <remarks>This is equivalent to calling <see cref="M:Plossum.CommandLine.UsageInfo.ToString(System.Int32)">ToString(78)</see></remarks></member>
        <member name="M:Plossum.CommandLine.UsageInfo.ToString(System.Int32)">
            <summary>
            Converts this <see cref="T:Plossum.CommandLine.UsageInfo" /> instance to a string.
            </summary>
            <param name="width">The width of the field (in characters) in which to format the usage description.</param>
            <returns>A string including the header, and a complete list of the options and their descriptions
            available in this <see cref="T:Plossum.CommandLine.UsageInfo" /> object.</returns></member>
        <member name="M:Plossum.CommandLine.UsageInfo.ToString(System.Int32,System.Boolean)">
            <summary>
            Converts this <see cref="T:Plossum.CommandLine.UsageInfo" /> instance to a string.
            </summary>
            <param name="width">The width of the field (in characters) in which to format the usage description.</param>
            <param name="includeErrors">if set to <c>true</c> any errors that occured during parsing the command line will be included
            in the output.</param>
            <returns>A string including the header, optionally errors, and a complete list of the options and their descriptions
            available in this <see cref="T:Plossum.CommandLine.UsageInfo" /> object.</returns></member>
        <member name="T:Plossum.CommandLine.AssignmentToken">
            <summary>
            <see cref="T:Plossum.CommandLine.Token" /> representing an assignment character.
            </summary></member>
        <member name="M:Plossum.CommandLine.AssignmentToken.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.AssignmentToken" /> class.
            </summary>
            <param name="assignmentChar">The assignment char.</param></member>
        <member name="P:Plossum.CommandLine.AssignmentToken.AssignmentCharacter">
            <summary>
            Gets the assignment character.
            </summary>
            <value>The assignment character.</value></member>
        <member name="T:Plossum.CommandLine.AttributeException">
            <summary>
            The exception is thrown when the values of the attributes <see cref="T:Plossum.CommandLine.CommandLineManagerAttribute" />, <see cref="T:Plossum.CommandLine.CommandLineOptionAttribute" />
            and <see cref="T:Plossum.CommandLine.CommandLineOptionGroupAttribute" /> are set incorrectly or the attributes are used in an
            erroneous way.
            </summary>
            <remarks>This exception indicates a programming error rather than a user error, and should never be thrown in
            a finished program.</remarks></member>
        <member name="M:Plossum.CommandLine.AttributeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.AttributeException" /> class.
            </summary></member>
        <member name="M:Plossum.CommandLine.AttributeException.#ctor(System.Type,System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.AttributeException" /> class.
            </summary>
            <param name="attributeType">Type of the attribute on which the error is present.</param>
            <param name="objectType">Type of the object implementing the attribute on which the error occured.</param>
            <param name="message">The error message.</param></member>
        <member name="M:Plossum.CommandLine.AttributeException.#ctor(System.Type,System.Reflection.MemberInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.AttributeException" /> class.
            </summary>
            <param name="attributeType">Type of the attribute on which the error is present.</param>
            <param name="member">The member assigned the attribute with the error.</param>
            <param name="message">The error message.</param></member>
        <member name="M:Plossum.CommandLine.AttributeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.AttributeException" /> class.
            </summary>
            <param name="message">The message.</param></member>
        <member name="M:Plossum.CommandLine.AttributeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.AttributeException" /> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param></member>
        <member name="M:Plossum.CommandLine.AttributeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.AttributeException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception></member>
        <member name="T:Plossum.CommandLine.OptionInfo">
            <summary>
            Represents the descriptive properties of a command line option.
            </summary></member>
        <member name="M:Plossum.CommandLine.OptionInfo.#ctor(Plossum.CommandLine.UsageInfo,Plossum.CommandLine.Option,Plossum.CommandLine.OptionStyles)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.OptionInfo" /> class.
            </summary>
            <param name="usageInfo">The <see cref="T:Plossum.CommandLine.UsageInfo" /> creating this OptionInfo</param>
            <param name="option">The option.</param>
            <param name="optionStyle">The option style.</param></member>
        <member name="P:Plossum.CommandLine.OptionInfo.Aliases">
            <summary>
            Gets an enumeration containing strings representing the prefixed names of the aliases of this option.
            </summary>
            <value>an enumeration containing strings representing the prefixed names of the aliases of this option.</value></member>
        <member name="P:Plossum.CommandLine.OptionInfo.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value></member>
        <member name="P:Plossum.CommandLine.OptionInfo.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value></member>
        <member name="P:Plossum.CommandLine.OptionInfo.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
            <remarks>The id of an option is the same as its <see cref="P:Plossum.CommandLine.OptionInfo.Name" />.</remarks></member>
        <member name="M:Plossum.CommandLine.OptionInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns></member>
        <member name="M:Plossum.CommandLine.OptionInfo.ToString(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a formatted string describing this option and its aliases.
            </summary>
            <param name="indent">The indentation to use.</param>
            <param name="nameColumnWidth">Width of the name column.</param>
            <param name="descriptionColumnWidth">Width of the description column.</param>
            <returns>a formatted string describing this option and its aliases that is suitable for displaying
            as a help message.</returns></member>
        <member name="M:Plossum.CommandLine.OptionInfo.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary></member>
        <member name="T:Plossum.CommandLine.ErrorInfo">
            <summary>
            Represents an error generated by the <see cref="T:Plossum.CommandLine.CommandLineParser" />
            </summary></member>
        <member name="M:Plossum.CommandLine.ErrorInfo.#ctor(Plossum.CommandLine.ParseErrorCodes,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.ErrorInfo" /> class.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="errorMessage">The error message.</param>
            <param name="optionName">Name of the option.</param>
            <param name="fileName">Name of the file, or null if no file name was available.</param>
            <param name="line">The line number on which the error occured, or null if no line information was available.</param></member>
        <member name="P:Plossum.CommandLine.ErrorInfo.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value></member>
        <member name="P:Plossum.CommandLine.ErrorInfo.ErrorCode">
            <summary>
            Gets or sets the error code.
            </summary>
            <value>The error code.</value></member>
        <member name="P:Plossum.CommandLine.ErrorInfo.OriginatesFromFile">
            <summary>
            Gets a value indicating whether this error originates from a file, meaning that a file name will be available.
            </summary>
            <value><c>true</c> if this error originates from a file; otherwise, <c>false</c>.</value></member>
        <member name="P:Plossum.CommandLine.ErrorInfo.OptionName">
            <summary>
            Gets or sets the name of the option causing this error.
            </summary>
            <value>The name of the option causing this error, or null if no option name is available.</value></member>
        <member name="P:Plossum.CommandLine.ErrorInfo.HasOptionName">
            <summary>
            Gets a value indicating whether this instance has option name set.
            </summary>
            <value>
            	<c>true</c> if this instance has option name set; otherwise, <c>false</c>.
            </value></member>
        <member name="P:Plossum.CommandLine.ErrorInfo.Line">
            <summary>
            Gets or sets the line on which the error occured.
            </summary>
            <value>The line on which the error occured, or null if no such information is available.</value></member>
        <member name="P:Plossum.CommandLine.ErrorInfo.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>The name of the file in which the error occured, or null if no file name is available.</value></member>
        <member name="M:Plossum.CommandLine.ErrorInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns></member>
        <member name="M:Plossum.CommandLine.ErrorInfo.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns></member>
        <member name="M:Plossum.CommandLine.ErrorInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns></member>
        <member name="T:Plossum.CommandLine.ParseException">
            <summary>
            Base class for any exceptions specific to the command line parser. Indicates an error during the
            parsing of the command line.
            </summary></member>
        <member name="M:Plossum.CommandLine.ParseException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.ParseException" /> class.
            </summary></member>
        <member name="M:Plossum.CommandLine.ParseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.ParseException" /> class.
            </summary>
            <param name="message">The message.</param></member>
        <member name="M:Plossum.CommandLine.ParseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.ParseException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param></member>
        <member name="M:Plossum.CommandLine.ParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.ParseException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception></member>
        <member name="T:Plossum.CommandLine.LogicException">
            <summary>
            Base class for exceptions epresenting a programming error (as opposed to a runtime usage error).
            </summary></member>
        <member name="M:Plossum.CommandLine.LogicException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.LogicException" /> class.
            </summary></member>
        <member name="M:Plossum.CommandLine.LogicException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.LogicException" /> class.
            </summary>
            <param name="message">The message.</param></member>
        <member name="M:Plossum.CommandLine.LogicException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.LogicException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param></member>
        <member name="M:Plossum.CommandLine.LogicException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.LogicException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception></member>
        <member name="T:Plossum.CommandLine.CommandLineOptionAttribute">
            <summary>
            Attribute indicating that the field to which is applied should receive the value of a command line option,
            and also specifies the properties of that option.
            </summary>
            <remarks>This attribute may be applied to properties, fields and methods. If applied to a method, the method
            must accept exactly one argument which may not be an array or collection type. The method will then be called
            once every time the option is specified with the value of the option.  If specified on a field or property
            the type of that member must be one of the built-in types, a one-dimensional array of one of the
            built in types, a <see cref="T:System.Collections.ICollection" /> or a
            <see cref="T:System.Collections.Generic.ICollection`1" />. If an array type or a collection type, the enumerable
            will contain all values that the option is specified with (if specified multiple times).</remarks></member>
        <member name="M:Plossum.CommandLine.CommandLineOptionAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.CommandLineOptionAttribute" /> class.
            </summary></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionAttribute.GroupId">
            <summary>
            Gets or sets the group to which this option belongs.
            </summary>
            <value>The id of the group to which this option belongs, or null if this option does not belong to any group.</value></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionAttribute.Prohibits">
            <summary>
            Gets or sets the names of other options that must not be specified on the command line if this option is specified.
            </summary>
            <value>The names of other options that must not be specified on the command line if this option is specified.</value>
            <remarks>Option names can be comma- or space-separated.  If an option prohibits another option, this
            automatically means that the other option also prohibits the first option, and it need not be
            explicitly specified.</remarks>
            <seealso cref="P:Plossum.CommandLine.CommandLineOptionGroupAttribute.Require" /></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionAttribute.Name">
            <summary>
            Gets or sets the name of this option.
            </summary>
            <value>The name of this option.</value>
            <remarks>This is the text that the user will specify on the command line. If not explicitly set, this
            will take on the name of the member to which the attribute was applied.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionAttribute.BoolFunction">
            <summary>
            Gets or sets how option values will be assigned if this option is applied to a field of type bool.
            </summary>
            <value>The bool function of this option.</value>
            <remarks>This value is ignored for any other member types than Boolean. See <see cref="T:Plossum.CommandLine.BoolFunction" /> for
            more information.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionAttribute.MaxOccurs">
            <summary>
            Gets or sets the maximum number of times this option may be specified on the command line.
            </summary>
            <value>The the maximum number of times this option may be specified on the command line.</value>
            <remarks><para>The default value for this option is 1 for any non-collection or array type, and 0 otherwise.</para>
            <para>If this value is set to zero that means that there is no upper bound on the number of times
            this option may be specified.</para>
            <note>Note that this value must be either 0 or 1 if the member is not a method, or if the field or
            property does not represent an array or collection type.</note></remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionAttribute.MinOccurs">
            <summary>
            Gets or sets the minimum number of times this option may be specified on the command line.
            </summary>
            <value>The the minimum number of times this option may be specified on the command line.</value>
            <remarks>
            <para>The default value for this option is 0.</para>
            <note>This value must be less than or equal to <see cref="P:Plossum.CommandLine.CommandLineOptionAttribute.MaxOccurs" />, unless <see cref="P:Plossum.CommandLine.CommandLineOptionAttribute.MaxOccurs" /> is
            equal to 0.</note>
            </remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionAttribute.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionAttribute.DefaultAssignmentValue">
            <summary>
            Gets or sets the default assignment value for this option.
            </summary>
            <value>The default assignment value for this option, or null if this option does not have a default assignment value.</value>
            <remarks>This value must be null unless <see cref="P:Plossum.CommandLine.CommandLineOptionAttribute.RequireExplicitAssignment" /> is set to <b>true</b>. If
            set, this means that if the option is specified without an explicit assignment, this is the value the option
            will be take. However if the option is never specified on the command line, this value will <i>not</i> be
            assigned to the associated member.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionAttribute.RequireExplicitAssignment">
            <summary>
            Gets or sets a value indicating whether this option requires an explicit assignment character or not.
            </summary>
            <value>
            	<c>true</c> if this option requires an explicit assignment character; otherwise, <c>false</c>.
            </value>
            <remarks>Requiring an explicit assignment character means that a valid assignment character must follow
            the option name on the command line to assign a value to this option. If this value is not set to true
            the assignment character between an option name and its intended value may be omitted.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionAttribute.Aliases">
            <summary>
            Gets or sets the aliases of this option.
            </summary>
            <value>A comma- or space-separated list of the aliases for this option.</value>
            <remarks>An option may have one or more aliases, which are other names with which to refer to the
            same option. This is common in the UN*X world, where many programs provide both a long and a short name
            for most options.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionAttribute.MaxValue">
            <summary>
            Gets or sets the maximum value for a numeric option.
            </summary>
            <value>The maximum value for a numeric option.</value>
            <remarks>This option should be null for any non-numeric option. This option also defaults to null for non-numeric
            options, or the maximum value for the type of this option for numerical options.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionAttribute.MinValue">
            <summary>
            Gets or sets the minimum value for a numeric option.
            </summary>
            <value>The minimum value for a numeric option.</value>
            <remarks>This option should be null for any non-numeric option. This option also defaults to null for non-numeric
            options, or the minimum value for the type of this option for numerical options.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionAttribute.IsMaxOccursSet">
            <summary>
            Gets a value indicating whether this instance has its <see cref="P:Plossum.CommandLine.CommandLineOptionAttribute.MaxOccurs" /> property explicitly set.
            </summary>
            <value>
            	<c>true</c> if this instance has its <see cref="P:Plossum.CommandLine.CommandLineOptionAttribute.MaxOccurs" /> property explicitly set.; otherwise, <c>false</c>.
            </value></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionAttribute.DoesRequireExplicitAssignment">
            <summary>
            Gets a value indicating whether this option requires explicit assignment.
            </summary>
            <value>A value indicating whether this option requires explicit assignment. If this value is
            null that means that it should inherit this value from its group or ultimately the manager.</value></member>
        <member name="T:Plossum.CommandLine.OptionGroupRequirement">
            <summary>
            Specifies the requirements on an option group.
            </summary></member>
        <member name="F:Plossum.CommandLine.OptionGroupRequirement.None">
            <summary>
            Indicates that no requirement is placed on the options of this group.
            </summary></member>
        <member name="F:Plossum.CommandLine.OptionGroupRequirement.AtMostOne">
            <summary>
            Indicates that at most one of the options in this group may be specified on the command line.
            </summary></member>
        <member name="F:Plossum.CommandLine.OptionGroupRequirement.AtLeastOne">
            <summary>
            Indicates that at least one of the options in this group may be specified on the command line.
            </summary></member>
        <member name="F:Plossum.CommandLine.OptionGroupRequirement.ExactlyOne">
            <summary>
            Indicates that exactly one of the options in this group must be specified on the command line.
            </summary></member>
        <member name="F:Plossum.CommandLine.OptionGroupRequirement.All">
            <summary>
            Indicates that all options of this group must be specified.
            </summary></member>
        <member name="T:Plossum.CommandLine.OptionStyles">
            <summary>
            Flags indicating the option styles recognized by the <see cref="T:Plossum.CommandLine.CommandLineParser" />.
            </summary>
            <remarks>Option styles indicates how options may be specified on the command line, for an example the
            <see cref="F:Plossum.CommandLine.OptionStyles.Windows" /> style dictate that options are prefixed by a slash '/' while the <see cref="F:Plossum.CommandLine.OptionStyles.LongUnix" />
            style is prefixed by a double dash ('--'). Options may be freely combined using the binary or (|) operator.
            <note>Note that both <see cref="F:Plossum.CommandLine.OptionStyles.Plus" /> and <see cref="F:Plossum.CommandLine.OptionStyles.Group" /> implies the <see cref="F:Plossum.CommandLine.OptionStyles.ShortUnix" /> option
            style. You should never use binary operators to prevent this implication.</note></remarks></member>
        <member name="F:Plossum.CommandLine.OptionStyles.None">
            <summary>
            No options are enabled nor will be parsed. Everything on the command line is treated
            as remaining arguments (see <see cref="P:Plossum.CommandLine.CommandLineParser.RemainingArguments" />).
            </summary></member>
        <member name="F:Plossum.CommandLine.OptionStyles.Windows">
            <summary>
            The windows style for options is recognized. This means that options are prefixed
            with the slash '/' character. An option specified in this style will never be
            grouped (see <see cref="F:Plossum.CommandLine.OptionStyles.Group" />).
            </summary></member>
        <member name="F:Plossum.CommandLine.OptionStyles.LongUnix">
            <summary>
            The long unix style for options is recognized. This means that options with long
            names (more than one character) are prefixed with two dashes '--'. (Also options
            of only one character in length can be specified in this style). Options specified
            in this style will never be grouped (see <see cref="F:Plossum.CommandLine.OptionStyles.Group" />).
            </summary></member>
        <member name="F:Plossum.CommandLine.OptionStyles.File">
            <summary>
            Option files are recognized and parsed automatically by the <see cref="T:Plossum.CommandLine.CommandLineParser" />.
            This allows specifying a file name prefixed by the '@' character on the command line. Any
            such file will then be opened and parsed for additional command line options by the
            command line parser.  The syntax for the options (or additional arguments) specified in the
            file is the very same as that for the command line itself).
            </summary></member>
        <member name="F:Plossum.CommandLine.OptionStyles.ShortUnix">
            <summary>
            The short unix style for options is recognized. This means that options are prefixed
            by a single dash ('-').  If <see cref="F:Plossum.CommandLine.OptionStyles.Group" /> is also specified, any options
            specified in this style will be grouped.
            </summary></member>
        <member name="F:Plossum.CommandLine.OptionStyles.Plus">
            <summary>
            The plus style for options is recognized. Specifying this style implies the <see cref="F:Plossum.CommandLine.OptionStyles.ShortUnix" />
            style. This means that options can be prefixed with either the dash ('-') character or the
            ('+') character. This can be useful for boolean options when used with the <see cref="F:Plossum.CommandLine.BoolFunction.UsePrefix" />
            option, in which case the prefix of the option will indicate what value to set the option to.
            Options specified in this style will be grouped if the <see cref="F:Plossum.CommandLine.OptionStyles.Group" /> option is also specified.
            </summary></member>
        <member name="F:Plossum.CommandLine.OptionStyles.Group">
            <summary>
            Grouping of options is enabled for the <see cref="F:Plossum.CommandLine.OptionStyles.ShortUnix" /> and <see cref="F:Plossum.CommandLine.OptionStyles.Plus" /> style. Specifying
            this style also implies the <see cref="F:Plossum.CommandLine.OptionStyles.ShortUnix" /> style.  Grouping of options means that several options
            with names only one character long can be concatenated on the command line. For an example the command line
            "tar -xvzf file.tar.gz" would be interpreted as "tar -x -v -z -f file.tar.gz". If this option is specified
            and option styles with names longer than one character should also be recognized the <see cref="F:Plossum.CommandLine.OptionStyles.LongUnix" />
            option style should also be enabled.
            </summary></member>
        <member name="F:Plossum.CommandLine.OptionStyles.Unix">
            <summary>
            This option style indicates a combination of the <see cref="F:Plossum.CommandLine.OptionStyles.ShortUnix" /> and <see cref="F:Plossum.CommandLine.OptionStyles.LongUnix" /> flags.
            </summary></member>
        <member name="F:Plossum.CommandLine.OptionStyles.All">
            <summary>
            This means all option styles above are enabled.
            </summary></member>
        <member name="M:Plossum.CommandLine.OptionFileToken.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.OptionFileToken" /> class.
            </summary></member>
        <member name="T:Plossum.CommandLine.CommandLineOptionGroupAttribute">
            <summary>
            Attribute used to specify an option group in a command line option manager object.
            </summary>
            <remarks>Option groups are used for logical grouping of options. This is in part useful for
            grouping related options in the usage documentation generated, but also to place certain
            restrictions on a group of options.</remarks></member>
        <member name="M:Plossum.CommandLine.CommandLineOptionGroupAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.CommandLineOptionGroupAttribute" /> class.
            </summary>
            <param name="id">The id.</param>
            <remarks>The id must be unique within the option manager object.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionGroupAttribute.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
            <remarks>This is the name that will be displayed as a headline for the options contained in the
            group in any generated documentation. If not explicitly set it will be the same as <see cref="P:Plossum.CommandLine.CommandLineOptionGroupAttribute.Id" />.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionGroupAttribute.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionGroupAttribute.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionGroupAttribute.Require">
            <summary>
            Gets or sets the requirements placed on the options in this group.
            </summary>
            <value>requirements placed on the options in this group.</value></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionGroupAttribute.RequireExplicitAssignment">
            <summary>
            Gets or sets a value indicating whether explicit assignment is required for the options
            of this group.
            </summary>
            <value>
            	<c>true</c> if explicit assignment is required by the options of this group; otherwise, <c>false</c>.
            </value>
            <remarks>This defaults all options in this group to the specified value, but setting another value
            explicitly on an option overrides this setting.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineOptionGroupAttribute.HasRequireExplicitAssignment">
            <summary>
            Gets a value indicating whether this instance has
            </summary>
            <value>
            	<c>true</c> if this instance has specified a require explicit assignment value; otherwise, <c>false</c>.
            </value></member>
        <member name="T:Plossum.CommandLine.CommandLineManagerAttribute">
            <summary>
            Attribute describing the command line manager class that will be used for storing the values
            of the command line options parsed by the <see cref="T:Plossum.CommandLine.CommandLineParser" />.
            </summary>
            <remarks>This attribute is required for any class that is to act as a command line manager for parsing. It
            may only be specified on a class and only one occurence may be specified.</remarks></member>
        <member name="M:Plossum.CommandLine.CommandLineManagerAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.CommandLineManagerAttribute" /> class.
            </summary></member>
        <member name="P:Plossum.CommandLine.CommandLineManagerAttribute.ApplicationName">
            <summary>
            Gets or sets the name of the application.
            </summary>
            <value>The name of the application.</value>
            <remarks>If not explicitly specified, this value will be retrieved from the assembly information.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineManagerAttribute.Copyright">
            <summary>
            Gets or sets the copyright message.
            </summary>
            <value>The copyright message.</value>
            <remarks>If not explicitly specified, this value will be retrieved from the assembly information.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineManagerAttribute.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
            <remarks>If not explicitly specified, the application will be retrieved from the assembly information.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineManagerAttribute.Version">
            <summary>
            Gets or sets the version of this application.
            </summary>
            <value>The version of this application.</value>
            <remarks>If not explicitly specified, the application will be retrieved from the assembly information.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineManagerAttribute.IsCaseSensitive">
            <summary>
            Gets or sets a value indicating whether options are case sensitive or not.
            </summary>
            <value>
            	<c>true</c> if options are case sensitive; otherwise, <c>false</c>.
            </value></member>
        <member name="P:Plossum.CommandLine.CommandLineManagerAttribute.EnabledOptionStyles">
            <summary>
            Gets or sets the enabled option styles.
            </summary>
            <value>The enabled option styles.</value>
            <remarks>The default value for this property is to enable the Windows, ShortUnix and File style.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineManagerAttribute.RequireExplicitAssignment">
            <summary>
            Gets or sets a value indicating whether options in this manager requires explicit assignment or not.
            </summary>
            <value>
            	<c>true</c> if options require explicit assignment; otherwise, <c>false</c>.
            </value>
            <remarks>Explicit assignment means that the assignment character must be used to assign a value
            to an option. If set to false a space character after an option followed by a value will be interpreted
            as an assignment.
            <note>This value sets the default value for all options contained in this manager, but may be overridden for
            individual groups.</note></remarks></member>
        <member name="T:Plossum.CommandLine.BoolFunction">
            <summary>
            Specifies how a boolean command line option should be evaluated.
            </summary>
            <remarks>This enumeration applies to the <see cref="P:Plossum.CommandLine.CommandLineOptionAttribute.BoolFunction" /> property, and
            is ignored unless the attribute is applied to an attribute with the base type of <b>bool</b>.
            Options that are boolean values can be treated in different ways according to the values of this enumeration.</remarks></member>
        <member name="F:Plossum.CommandLine.BoolFunction.Value">
            <summary>
            The option is set to the value specified, which means that the option requires a value (unless a default value
            is assigned, see <see cref="P:Plossum.CommandLine.CommandLineOptionAttribute.DefaultAssignmentValue" />). The value must be specified as
            either <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.
            </summary></member>
        <member name="F:Plossum.CommandLine.BoolFunction.TrueIfPresent">
            <summary>
            The option does not accept a value, and if present on the command line the member to which the attribute is
            applied will be set to <b>true</b>.
            </summary></member>
        <member name="F:Plossum.CommandLine.BoolFunction.FalseIfPresent">
            <summary>
            The option does not accept a value, and if present on the command line the member to which the attribute is
            applied will be set to <b>false</b>.
            </summary></member>
        <member name="F:Plossum.CommandLine.BoolFunction.UsePrefix">
            <summary>
            The option does not accept a value. Instead if present on the command line the member to which the attribute
            is applied will be set to <b>true</b> if the prefix of the option was '+', otherwise; <b>false</b>. It is an
            error to use this enumeration if <see cref="F:Plossum.CommandLine.OptionStyles.Plus" /> was not specified.
            </summary></member>
        <member name="T:Plossum.CommandLine.CommandLineParser">
            <summary>
            Performs the actual parsing of a command line and provides methods for retrieving descriptive information
            about the options and groups available.
            </summary></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.CommandLineParser" /> class.
            </summary>
            <param name="optionManager">The option manager.</param>
            <remarks><para>The option manager is the user defined object that is tagged with the various attributes
            available in this namespace that contains definitions of the available options.</para>
            <para>This constructor initializes the parser with the <see cref="T:System.Globalization.NumberFormatInfo" /> specified
            in <see cref="P:System.Globalization.CultureInfo.NumberFormat" /> of <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />. This may not be desired, since it affects
            the parsing of numbers by this parser.</para></remarks></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.#ctor(System.Object,System.Globalization.NumberFormatInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.CommandLineParser" /> class.
            </summary>
            <param name="optionManager">The option manager.</param>
            <param name="numberFormatInfo">An object describing how numerical arguments should be parsed.</param>
            <remarks><para>The option manager is the user defined object that is tagged with the various attributes
            available in this namespace that contains definitions of the available options.</para>
            <para>This constructor initializes the parser with the <see cref="T:System.Globalization.NumberFormatInfo" /> specified, which affects
            the way that numbers are parsed.</para>
            <para>By default the assignment characters available are the equal sign ('=') for all options and
            the colon (':') for windows style options. See <see cref="M:Plossum.CommandLine.CommandLineParser.AddAssignmentCharacter(System.Char,Plossum.CommandLine.OptionStyles)" /> for information
            on how to change this.</para>
            <para>The default escape character is the backslash ('\'). See <see cref="M:Plossum.CommandLine.CommandLineParser.SetEscapeCharacters(System.Collections.Generic.IEnumerable{System.Char})" /> for information
            on how to change this.</para>
            <para>The default quotation enabled is by using double quotes ('"') within which the backslash ('\') character
            and the double quote ('"') can be escaped.</para>
            <para>In unquoted values the space character and the backslash can be escaped.</para></remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="optionManager" /> or <paramref name="numberFormatInfo" /> was
            a null reference</exception>
            <exception cref="T:Plossum.CommandLine.AttributeException">an error in the configuration of the option manager was found.</exception>
            <exception cref="T:System.InvalidOperationException">Indicates an internal error and should normally never be thrown.</exception></member>
        <member name="P:Plossum.CommandLine.CommandLineParser.ApplicationName">
            <summary>
            Gets or sets the name of the application.
            </summary>
            <value>The name of the application.</value></member>
        <member name="P:Plossum.CommandLine.CommandLineParser.ApplicationVersion">
            <summary>
            Gets or sets the application version.
            </summary>
            <value>The application version.</value></member>
        <member name="P:Plossum.CommandLine.CommandLineParser.ApplicationCopyright">
            <summary>
            Gets or sets the application copyright.
            </summary>
            <value>The application copyright.</value></member>
        <member name="P:Plossum.CommandLine.CommandLineParser.ApplicationDescription">
            <summary>
            Gets or sets the application description.
            </summary>
            <value>The application description.</value></member>
        <member name="P:Plossum.CommandLine.CommandLineParser.ExecutablePath">
            <summary>
            Gets the path to the executable of this application if it was included on the command line (it normally is), or null otherwise.
            </summary>
            <value>the path to the executable of this application if it was included on the command line.</value>
            <remarks>This should only be evaluated after <see cref="M:Plossum.CommandLine.CommandLineParser.Parse" /> has been called.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineParser.HasErrors">
            <summary>
            Gets a value indicating whether any errors were encountered during parsing.
            </summary>
            <value>
            	<c>true</c> if this instance has errors; otherwise, <c>false</c>.
            </value>
            <remarks>This should only be evaluated after <see cref="M:Plossum.CommandLine.CommandLineParser.Parse" /> has been called.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineParser.Errors">
            <summary>
            Gets a collection containing any parse errors that occured.
            </summary>
            <value>The parse errors that occured.</value>
            <remarks>This should only be evaluated after <see cref="M:Plossum.CommandLine.CommandLineParser.Parse" /> has been called.</remarks></member>
        <member name="P:Plossum.CommandLine.CommandLineParser.RemainingArguments">
            <summary>
            Gets the remaining arguments specified on the command line, i.e. those that were not interpreted as options
            or values assigned to options.
            </summary>
            <value>The remaining arguments.</value></member>
        <member name="P:Plossum.CommandLine.CommandLineParser.UsageInfo">
            <summary>
            Gets an object containing the descriptive properties of the option manager from which this instance was
            created.
            </summary>
            <value>The usage description.</value>
            <remarks>The returned <see cref="T:Plossum.CommandLine.UsageInfo" /> can be used to change descriptions of the options
            and groups of this parser, and to retrieve a formatted string suitable for displaying as a help
            message to the user.</remarks></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.Parse">
            <summary>
            Performs the actual parsing of the command line, setting (or calling) the relevant members of the
            option manager.
            </summary>
            <remarks><para>The command line from <see cref="P:System.Environment.CommandLine" /> will be used for parsing, assuming
            that the first argument is the path to the executable of this application.</para>
            <para>After parsing has been completed the <see cref="P:Plossum.CommandLine.CommandLineParser.HasErrors" /> property and <see cref="P:Plossum.CommandLine.CommandLineParser.Errors" /> property
            should be examined to determine if the command line was correct or not. If there are errors, the state
            of the option manager object (i.e. which properties has been set or not) is undefined.</para></remarks></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.Parse(System.String,System.Boolean)">
            <summary>
            Performs the actual parsing of a command line, setting (or calling) the relevant members of the
            option manager.
            </summary>
            <param name="commandLine">A string containing the command line passed to be parsed.</param>
            <param name="containsExecutable">if set to <c>true</c> it is assumed that the
            first argument on the command line is the path to the executable used to run this program.</param>
            <remarks>After parsing has been completed the <see cref="P:Plossum.CommandLine.CommandLineParser.HasErrors" /> property and <see cref="P:Plossum.CommandLine.CommandLineParser.Errors" /> property
            should be examined to determine if the command line was correct or not. If there are errors, the state
            of the option manager object (i.e. which properties has been set or not) is undefined.</remarks></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.Parse(System.String)">
            <summary>
            Performs the actual parsing of a command line, setting (or calling) the relevant members of the
            option manager.
            </summary>
            <param name="commandLine">A string containing the command line passed to be parsed. It is assumed that the
            first argument on the command line is the path to the executable used to run this program.</param>
            <remarks>After parsing has been completed the <see cref="P:Plossum.CommandLine.CommandLineParser.HasErrors" /> property and <see cref="P:Plossum.CommandLine.CommandLineParser.Errors" /> property
            should be examined to determine if the command line was correct or not. If there are errors, the state
            of the option manager object (i.e. which properties has been set or not) is undefined.</remarks></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.Parse(System.String[],System.Boolean)">
            <summary>
            Performs the actual parsing of a command line, setting (or calling) the relevant members of the
            option manager.
            </summary>
            <param name="args">An array containing the arguments passed to this program.</param>
            <param name="containsExecutable">if set to <c>true</c> it is assumed that the
            first argument in this list is the path to the executable used to run this program.</param>
            <remarks>After parsing has been completed the <see cref="P:Plossum.CommandLine.CommandLineParser.HasErrors" /> property and <see cref="P:Plossum.CommandLine.CommandLineParser.Errors" /> property
            should be examined to determine if the command line was correct or not. If there are errors, the state
            of the option manager object (i.e. which properties has been set or not) is undefined.</remarks></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.Parse(System.String[])">
            <summary>
            Performs the actual parsing of a command line, setting (or calling) the relevant members of the
            option manager.
            </summary>
            <param name="args">An array containing the arguments passed to this program. It is assumed that the
            first argument in this list is the path to the executable used to run this program.</param>
            <remarks>After parsing has been completed the <see cref="P:Plossum.CommandLine.CommandLineParser.HasErrors" /> property and <see cref="P:Plossum.CommandLine.CommandLineParser.Errors" /> property
            should be examined to determine if the command line was correct or not. If there are errors, the state
            of the option manager object (i.e. which properties has been set or not) is undefined.</remarks></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.Parse(System.IO.TextReader)">
            <summary>
            Performs the actual parsing of a command line, setting (or calling) the relevant members of the
            option manager.
            </summary>
            <param name="input">A <see cref="T:System.IO.TextReader" /> from which the command line can be read.</param>
            <remarks>The command line parser will assume that the first
            argument read from the command line is the path to the executable that were used to run this program.
            After parsing has been completed the <see cref="P:Plossum.CommandLine.CommandLineParser.HasErrors" /> property and <see cref="P:Plossum.CommandLine.CommandLineParser.Errors" /> property
            should be examined to determine if the command line was correct or not. If there are errors, the state
            of the option manager object (i.e. which properties has been set or not) is undefined.</remarks></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.Parse(System.IO.TextReader,System.Boolean)">
            <summary>
            Performs the actual parsing of a command line, setting (or calling) the relevant members of the
            option manager.
            </summary>
            <param name="input">A <see cref="T:System.IO.TextReader" /> from which the command line can be read.</param>
            <param name="containsExecutable">if set to <c>true</c> the command line parser will assume that the first
            argument read from the command line is the path to the executable that were used to run this program.</param>
            <remarks>After parsing has been completed the <see cref="P:Plossum.CommandLine.CommandLineParser.HasErrors" /> property and <see cref="P:Plossum.CommandLine.CommandLineParser.Errors" /> property
            should be examined to determine if the command line was correct or not. If there are errors, the state
            of the option manager object (i.e. which properties has been set or not) is undefined.</remarks></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.SetEscapeCharacters(System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            Sets the escape characters recognized by this parser for escaping characters.
            </summary>
            <param name="characters">The escape characters that should be recognized.</param>
            <remarks>The only escape character set by default is the backslash ('\') character which is
            pretty much standard for escaping characters. But should so be desired, other characters
            can be set here. No sanity checking of this argument is performed though, so be careful
            which characters you chose.</remarks></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.AddQuotation(Plossum.CommandLine.QuotationInfo)">
            <summary>
            Adds the specified quotation as a recognized quotation by this parser.
            </summary>
            <param name="quotationInfo">The quotation info.</param>
            <remarks><para>By default only the double quote is recognized as a quotation character, within which
            the double quote itself and the backslash character can be escaped. In unquoted values the
            space character and the backslash can be escaped.</para>
            <para>To specify quotations for unquoted strings, specify a <see cref="T:Plossum.CommandLine.QuotationInfo" /> with its
            quotation mark set to the null character ('\0').</para></remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="quotationInfo" /> was a null reference.</exception>
            <exception cref="T:System.InvalidOperationException">This method was called during parsing.</exception></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.RemoveQuotation(System.Char)">
            <summary>
            Removes the quotation with the specified quotation mark from this parser.
            </summary>
            <param name="quotationMark">The quotation mark representing the quotation to remove.</param>
            <exception cref="T:System.InvalidOperationException">This method was called during parsing.</exception></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.ClearQuotations">
            <summary>
            Removes all quotations from this parser.
            </summary>
            <exception cref="T:System.InvalidOperationException">This method was called during parsing.</exception></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.AddAssignmentCharacter(System.Char,Plossum.CommandLine.OptionStyles)">
            <summary>
            Adds the available assignment characters for the specified option style.
            </summary>
            <param name="assignmentCharacter">The assignment character.</param>
            <param name="targetStyles">The target styles to which this assignment character will be available.</param>
            <remarks>The default assignment characters available are the equal sign '=' for any option style and the
            colon ':' for windows style options.
            <note>Adding an assignment character that already exists will <i>overwrite</i> the definition of that
            assignment character with this one, so be sure to include all the styles to which you want the
            assignment character to apply to in <paramref name="targetStyles" /></note>
            <note>No sanity checks are performed on the assignment characters assigned, so choose these wisely.</note></remarks>
            <exception cref="T:System.InvalidOperationException">This method was called during parsing.</exception></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.RemoveAssignmentCharacter(System.Char)">
            <summary>
            Removes the specified assignment character from this instance.
            </summary>
            <param name="assignmentCharacter">The assignment character to remove.</param>
            <exception cref="T:System.InvalidOperationException">This method was called during parsing.</exception></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.ClearAssignmentCharacters">
            <summary>
            Removes all assignment characters from this parser.
            </summary></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.GetQuotationInfo(System.Char)">
            <summary>
            Gets the quotation info for the specified quotation mark.
            </summary>
            <param name="quotationMark">The quotation mark.</param>
            <returns>a <see cref="T:Plossum.CommandLine.QuotationInfo" /> instance describing the quotations for the specified
            quotation mark.</returns></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.MatchOptionFile">
            <summary>
            Matches an option file on the command line, creates a new lexer for that file and pushes
            that onto the lexer stack.
            </summary></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.MatchOptionName">
            <summary>
            Matches the name of an option and performs the neccessary callbacks to the option manager to
            set the value of the option.
            </summary></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.CheckMaxOccurs(Plossum.CommandLine.OptionNameToken,Plossum.CommandLine.IOption)">
            <summary>
            Checks that no option was specified more times than specified by its MaxOccurs attribute.
            </summary>
            <param name="optionNameToken">The option name token.</param>
            <param name="option">The option.</param>
            <returns></returns></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.ReportOptionError(Plossum.CommandLine.ParseErrorCodes,System.String,System.String,System.Object[])">
            <summary>
            Adds the specified error to the list of errors.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="optionName">Name of the option.</param>
            <param name="message">The message (which may contain the same formatting supported by <see cref="M:System.String.Format(System.String,System.Object)" />).</param>
            <param name="paramList">Additional parameters as described by the message format specifiers.</param></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.ReportError(Plossum.CommandLine.ParseErrorCodes,System.String,System.Object[])">
            <summary>
            Adds the specified error to the list of errors.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="message">The message (which may contain the same formatting supported by <see cref="M:System.String.Format(System.String,System.Object)" />).</param>
            <param name="paramList">Additional parameters as described by the message format specifiers.</param></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.SkipTokens(System.Int32)">
            <summary>
            Skips the specified number of tokens from the lexer.
            </summary>
            <param name="count">The number of lexers to skip.</param>
            <returns>true if all the specified tokens were skipped, or false if the end of stream was reached before.</returns></member>
        <member name="P:Plossum.CommandLine.CommandLineParser.LA1">
            <summary>
            Gets the next token that will be read by the current lexer, or null if no more tokens are available
            from the current lexer.
            </summary>
            <value>the next token that will be read by the current lexer, or null if no more tokens are available
            from the current lexer.</value>
            <remarks>This will not remove the token from the buffer, but rather works as a peek.</remarks></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.GetNextToken">
            <summary>
            Gets the next token from the current lexer and removes it from the buffer.
            </summary>
            <returns>the next token from the current lexer</returns></member>
        <member name="P:Plossum.CommandLine.CommandLineParser.CurrentLexer">
            <summary>
            Gets the current lexer.
            </summary>
            <value>The current lexer or null if there are no lexers.</value></member>
        <member name="P:Plossum.CommandLine.CommandLineParser.CurrentFile">
            <summary>
            Gets the current file being read by the lexer.
            </summary>
            <value>The current file being read by the current lexer, or a null reference if no file is being read.</value></member>
        <member name="P:Plossum.CommandLine.CommandLineParser.LA1Token">
            <summary>
            Gets or sets the lookahead token.
            </summary>
            <value>The lookahead token.</value>
            <remarks>This method should not be used by any method other than <see cref="P:Plossum.CommandLine.CommandLineParser.LA1" />. Use <see cref="P:Plossum.CommandLine.CommandLineParser.LA1" /> instead.</remarks></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.PopFinishedLexers">
            <summary>
            Pops all lexers from the lexer stack that have no more tokens available.
            </summary>
            <returns>true if there are more lexers available, otherwise; false</returns></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.PushLexer(Plossum.CommandLine.Lexer,System.String)">
            <summary>
            Pushes the specified lexer onto the lexer stack, hence making it the current lexer.
            </summary>
            <param name="lexer">The lexer.</param>
            <param name="fileName">Name of the file used for input to the lexer, or null if no file name is available.</param></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param></member>
        <member name="T:Plossum.CommandLine.CommandLineParser.OptionNameComparer">
            <summary>
            Comparer implementing compareres for collections keyed by <see cref="T:Plossum.CommandLine.OptionGroup" /> or
            strings. The comparisons will be case-sensitive or case-insensitive depending on the
            flag passed to the constructor.
            </summary></member>
        <member name="T:Plossum.CommandLine.CommandLineParser.LexerStackRecord">
            <summary>
            The type of a record on the lexer stack, combining a lexer with its lookahead token and file name.
            </summary></member>
        <member name="M:Plossum.CommandLine.CommandLineParser.LexerStackRecord.#ctor(Plossum.CommandLine.Lexer,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.CommandLineParser.LexerStackRecord" /> class.
            </summary>
            <param name="lexer">The lexer.</param>
            <param name="fileName">Name of the file or null if no file name is available.</param></member>
        <member name="P:Plossum.CommandLine.CommandLineParser.LexerStackRecord.Lexer">
            <summary>
            Gets the lexer.
            </summary>
            <value>The lexer.</value></member>
        <member name="P:Plossum.CommandLine.CommandLineParser.LexerStackRecord.LA1Token">
            <summary>
            Gets or sets the lookahead token.
            </summary>
            <value>The lookahead token.</value></member>
        <member name="P:Plossum.CommandLine.CommandLineParser.LexerStackRecord.FileName">
            <summary>
            Gets the name of the file.
            </summary>
            <value>The name of the file.</value></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mLexerStack">
            <summary>
            The stack of lexers. This is used when file arguments are processed on the command line, in which case a new
            lexer is created and pushed onto the stack so parsing will continue from that lexer instead. The current
            lexer is the one on the top of the stack.
            </summary></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mOptionManager">
            <summary>
            The option manager, i.e. the object used for storing the values of the options read. Supplied by the
            user.
            </summary></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mOptions">
            <summary>
            Dictionary mapping option names to the corresponding <see cref="T:Plossum.CommandLine.Option" /> or <see cref="T:Plossum.CommandLine.OptionAlias" /> object.
            </summary></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mOptionGroups">
            <summary>
            Set containing all defined option groups.
            </summary></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mOptionNameComparer">
            <summary>
            The comparer to be used for comparing option names. This is either case sensitive, or case insensitive
            depending on what was specified in the <see cref="T:Plossum.CommandLine.CommandLineManagerAttribute" /> of the
            command line manager.
            </summary></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mEnabledOptionStyles">
            <summary>
            The option styles enabled for this parser.
            </summary></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mNumberFormatInfo">
            <summary>
            <see cref="T:System.Globalization.NumberFormatInfo" /> dictating how numeric values should be parsed.
            </summary></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mExecutable">
            <summary>
            The name of the executable file from the command line, or null if none was available.
            </summary></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mRemainingArguments">
            <summary>
            The list of the remaining arguments, i.e. those that were not options or values assigned to options.
            </summary></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mErrors">
            <summary>
            The list of errors.
            </summary></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mEscapeCharacters">
            <summary>
            The escape characters available to this parser.
            </summary></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mQuotations">
            <summary>
            Dictionary mapping quotation marks to <see cref="T:Plossum.CommandLine.QuotationInfo" /> objects describing what
            characters may be escaped within those quotes.
            </summary></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mAssignmentCharacters">
            <summary>
            Dictionary mapping assignemnt characters to the option styles for which they are enabled.
            </summary></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mSeparators">
            <summary>
            Separators that may be used for separating values in strings that may contain several values, such as
            the Aliases or Prohibits attributes of <see cref="T:Plossum.CommandLine.CommandLineOptionAttribute" />.
            </summary></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mDefaultEscapeCharacters">
            <summary>
            The default escape characters.
            </summary></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mIsParsing">
            <summary>
            Value indicating whether we are currently parsing.
            </summary></member>
        <member name="F:Plossum.CommandLine.CommandLineParser.mUsageDescription">
            <summary>
            Contains the object describing the command line options and groups for the option manager associated
            with this parser. It will be null before such an object is generated (upon request)
            </summary></member>
        <member name="T:Plossum.CommandLine.EndToken">
            <summary>
            <see cref="T:Plossum.CommandLine.Token" /> representing the special symbol used to stop the parsing of options, normally "--".
            </summary></member>
        <member name="M:Plossum.CommandLine.EndToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.EndToken" /> class.
            </summary></member>
        <member name="T:Plossum.CommandLine.Lexer">
            <summary>
            Provides tokenization of command lines. Used by the <see cref="T:Plossum.CommandLine.CommandLineParser" />.
            </summary></member>
        <member name="M:Plossum.CommandLine.Lexer.#ctor(System.IO.TextReader,C5.ICollection{System.Char},C5.IDictionary{System.Char,Plossum.CommandLine.QuotationInfo},C5.IDictionary{System.Char,Plossum.CommandLine.OptionStyles})">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.Lexer" /> class.
            </summary>
            <param name="input">The <see cref="T:System.IO.TextReader" /> to use for input. This need not be seekable.</param>
            <param name="escapeCharacters">The escape characters that should be recognized.</param>
            <param name="quotations">The quotations that should be recognized.</param>
            <param name="assignmentCharacters">The assignment characters that should be recognized.</param></member>
        <member name="P:Plossum.CommandLine.Lexer.EnabledOptionStyles">
            <summary>
            Gets or sets the enabled option styles.
            </summary>
            <value>The enabled option styles.</value>
            <remarks>The enabled option styles detemines what types of switch-characters the lexer will recognize
            as starting an option on the command line.</remarks>
            <seealso cref="T:Plossum.CommandLine.OptionStyles" /></member>
        <member name="M:Plossum.CommandLine.Lexer.GetNextToken">
            <summary>
            Gets the next token from the input.
            </summary>
            <returns>the next token from the input or a null reference if no more tokens are available.</returns></member>
        <member name="M:Plossum.CommandLine.Lexer.MatchAssignmentCharacter">
            <summary>
            Matches an assignment character within the current context.
            </summary>
            <returns>An <see cref="T:Plossum.CommandLine.AssignmentToken" /> representing the assignment character found.</returns></member>
        <member name="M:Plossum.CommandLine.Lexer.MatchValue">
            <summary>
            Matches a value.
            </summary>
            <returns>A <see cref="T:Plossum.CommandLine.ValueToken" /> describing the value read.</returns>
            <remarks>This method determines whether the value to be read is quoted or not and
            calls the appropriate method to do the parsing.</remarks>
            <exception cref="T:Plossum.CommandLine.MissingClosingQuoteException">no closing quote was found before the command line ended.</exception></member>
        <member name="M:Plossum.CommandLine.Lexer.MatchUnquotedValue">
            <summary>
            Matches an unquoted value. An unquoted value is any string that is terminated by an unescaped white space
            or the end of input.
            </summary>
            <returns>A <see cref="T:Plossum.CommandLine.ValueToken" /> representing the value parsed.</returns></member>
        <member name="M:Plossum.CommandLine.Lexer.MatchQuotedValue">
            <summary>
            Matches a quoted value.
            </summary>
            <returns>A <see cref="T:Plossum.CommandLine.ValueToken" /> representing the value parsed.</returns>
            <remarks>A quoted value is any string that starts with a quote character</remarks>
            <exception cref="T:Plossum.CommandLine.MissingClosingQuoteException">no closing quote was found before the command line ended.</exception></member>
        <member name="M:Plossum.CommandLine.Lexer.MatchGroupedOptionNames">
            <summary>
            Matches one or more options in sequence with a one-character name.
            </summary>
            <returns>An <see cref="T:Plossum.CommandLine.OptionNameToken" /> representing the name (and style) of the first option
            in the sequence read.</returns>
            <remarks>This method is called by the other methods that start with "MatchShort".
            Even though this method only returns the first option read, the <see cref="F:Plossum.CommandLine.Lexer.mTokenQueue" /> is
            filled up with the rest of them.</remarks></member>
        <member name="M:Plossum.CommandLine.Lexer.MatchShortUnixOption">
            <summary>
            Matches an option name (or names depending on the option styles enabled) preceeded by the '-' sign.
            </summary>
            <returns>An <see cref="T:Plossum.CommandLine.OptionNameToken" /> representing the name (and style) of the first option
            in the sequence read.</returns>
            <remarks>This method calls <see cref="M:Plossum.CommandLine.Lexer.MatchGroupedOptionNames" /> if the <see cref="F:Plossum.CommandLine.OptionStyles.Group" />
            style is enabled, otherwise <see cref="M:Plossum.CommandLine.Lexer.MatchLongOptionName" />.</remarks></member>
        <member name="M:Plossum.CommandLine.Lexer.MatchPlusOption">
            <summary>
            Matches an option name (or names depending on the option styles enabled) preceeded by the '+' sign.
            </summary>
            <returns>An <see cref="T:Plossum.CommandLine.OptionNameToken" /> representing the name (and style) of the first option
            in the sequence read.</returns>
            <remarks>This method calls <see cref="M:Plossum.CommandLine.Lexer.MatchGroupedOptionNames" /> if the <see cref="F:Plossum.CommandLine.OptionStyles.Group" />
            style is enabled, otherwise <see cref="M:Plossum.CommandLine.Lexer.MatchLongOptionName" />.</remarks></member>
        <member name="M:Plossum.CommandLine.Lexer.MatchEndOption">
            <summary>
            Matches the end of options token, represented by a double-dash ('--').
            </summary>
            <returns>A token of type <see cref="T:Plossum.CommandLine.EndToken" /></returns>
            <remarks>This method does <b>not</b> make the lexer stop parsing options. The calling application
            needs to set EnabledOptionStyles to <see cref="F:Plossum.CommandLine.OptionStyles.None" /> for that to happen, which can
            be done in response to this token being returned.</remarks></member>
        <member name="M:Plossum.CommandLine.Lexer.MatchLongOptionName">
            <summary>
            Matches a long option name with the current option style.
            </summary>
            <returns>An <see cref="T:Plossum.CommandLine.OptionNameToken" /> representing the name and style of the option.</returns>
            <exception cref="T:Plossum.CommandLine.MissingOptionNameException">there was no name following the option switch character</exception></member>
        <member name="M:Plossum.CommandLine.Lexer.MatchWindowsOption">
            <summary>
            Matches a long option name with the <see cref="F:Plossum.CommandLine.OptionStyles.Windows" /> style. This must be preceeded
            a single slash ('/').
            </summary>
            <returns>An <see cref="T:Plossum.CommandLine.OptionNameToken" /> representing the name and style of the option.</returns>
            <exception cref="T:Plossum.CommandLine.MissingOptionNameException">there was no name following the option switch character</exception></member>
        <member name="M:Plossum.CommandLine.Lexer.MatchLongUnixOption">
            <summary>
            Matches a long option name with the <see cref="F:Plossum.CommandLine.OptionStyles.LongUnix" /> style. This may be preceeded
            by either a single ('-') or a double ('--') dash.
            </summary>
            <returns>An <see cref="T:Plossum.CommandLine.OptionNameToken" /> representing the name and style of the option.</returns>
            <exception cref="T:Plossum.CommandLine.MissingOptionNameException">there was no name following the option switch character</exception></member>
        <member name="M:Plossum.CommandLine.Lexer.IsWhiteSpace(System.Int32)">
            <summary>
            Determines whether the specified character is a white space character.
            </summary>
            <param name="ch">The character to test.</param>
            <returns>
            	<c>true</c> the specified character is a white space character; otherwise, <c>false</c>.
            </returns></member>
        <member name="M:Plossum.CommandLine.Lexer.SkipCharacters(System.Int32)">
            <summary>
            Skips ahead the specified number of characters in the input stream (or buffer).
            </summary>
            <param name="count">The number of characters to skip.</param>
            <returns><c>true</c> if all specified characters were skipped, or <c>false</c> if there was
            not enough input left.</returns>
            <remarks>This has the same effect as calling <see cref="M:Plossum.CommandLine.Lexer.ReadCharacter" /> <paramref name="count" />
            number of times.</remarks></member>
        <member name="M:Plossum.CommandLine.Lexer.ReadCharacter">
            <summary>
            Reads the next character from the input and moves the position of the input stream (or buffer
            depending on from where the character was read) one step forward.
            </summary>
            <returns>The next available character from the input, or -1 if no more characters are available.</returns></member>
        <member name="M:Plossum.CommandLine.Lexer.LA(System.Int32)">
            <summary>
            Returns the lookahead character for the specified offset.
            </summary>
            <param name="offset">The number of characters to peek ahead.</param>
            <returns>the lookahead character for the specified offset, or -1 if there is no characters available that
            for the specified lookahead.</returns>
            <remarks>This is the last character that will be read by <see cref="M:Plossum.CommandLine.Lexer.ReadCharacter" /> if
            it is called <paramref name="offset" /> number of times.</remarks></member>
        <member name="M:Plossum.CommandLine.Lexer.FillCharacterBuffer">
            <summary>
            Fills up the character buffer with as many character as fits or are available, whichever is the least.
            </summary>
            <returns>The number of characters added to the buffer.</returns></member>
        <member name="P:Plossum.CommandLine.Lexer.CharacterBufferSize">
            <summary>
            Gets the number of available characters in the internal character buffer.
            </summary>
            <value>the number of available characters in the internal character buffer.</value></member>
        <member name="M:Plossum.CommandLine.Lexer.IsEscapeCharacter(System.Int32)">
            <summary>
            Determines whether the specified character is a character used to escape other characters, such
            as the backslash '\' in C# strings.
            </summary>
            <param name="ch">The character to test.</param>
            <returns>
            	<c>true</c> if the specified character is a character used to escape other characters; otherwise, <c>false</c>.
            </returns>
            <remarks>The escape character in use is <i>not</i> context sensitive.</remarks></member>
        <member name="M:Plossum.CommandLine.Lexer.IsAssignmentCharacter(System.Int32)">
            <summary>
            Determines whether the specified character is an assignment character for the <see cref="T:Plossum.CommandLine.OptionStyles" />
            currently being parsed.
            </summary>
            <param name="ch">The character to check.</param>
            <returns>
            	<c>true</c> if the specified character is an assignment character for the <see cref="T:Plossum.CommandLine.OptionStyles" />
            currently being parsed; otherwise, <c>false</c>.
            </returns></member>
        <member name="M:Plossum.CommandLine.Lexer.ReadPossiblyEscapedCharacter(System.Char)">
            <summary>
            Reads a character from the input stream which may be escaped within the specified context.
            </summary>
            <param name="currentQuote">The current quote in use for parsing the current value..</param>
            <returns>The character read if it was not an escape character within the current context that
            in turn is followed by a valid escape code within the current context. </returns>
            <remarks>The context is determined by the <paramref name="currentQuote" /> argument, which
            indicates the type of quotes that were used for quoting the value currently being parsed. The
            special value of -1 indicates that no quotes were used.  If an escape character is found this method
            will actually read two characters and convert it to the replacement specified.</remarks></member>
        <member name="F:Plossum.CommandLine.Lexer.mText">
            <summary>
            Stores text read by the lexer when more than one character needs to be stored
            </summary></member>
        <member name="F:Plossum.CommandLine.Lexer.mEnabledOptionStyles">
            <summary>
            Indicates the option styles that are currently active.
            </summary></member>
        <member name="F:Plossum.CommandLine.Lexer.mInput">
            <summary>
            The input stream used by the lexer. This must be readable, but need not be seekable.
            </summary></member>
        <member name="F:Plossum.CommandLine.Lexer.mCurrentOptionStyle">
            <summary>
            Intermediate storage of the current option style being parsed, used by various MatchXXXX functions.
            </summary></member>
        <member name="F:Plossum.CommandLine.Lexer.mTokenQueue">
            <summary>
            A queue of tokens to be returned by <see cref="M:Plossum.CommandLine.Lexer.GetNextToken" />. Filled up if a single call
            to GetNextToken generates more than one token, such as when reading an option of style
            <see cref="F:Plossum.CommandLine.OptionStyles.ShortUnix" />
            </summary></member>
        <member name="F:Plossum.CommandLine.Lexer.mCharacterBuffer">
            <summary>
            Internal buffer of characters read from the input stream.
            </summary></member>
        <member name="F:Plossum.CommandLine.Lexer.mCharacterBufferCapacity">
            <summary>
            Constant indicating the size of the internal character buffer.
            </summary></member>
        <member name="F:Plossum.CommandLine.Lexer.mQuotations">
            <summary>
            Table of the valid quotes and what characters to escape for a value within those quotes. The special
            key of <c>-1</c> stores the escaped character table to use for unquoted values.
            </summary></member>
        <member name="F:Plossum.CommandLine.Lexer.mEscapeCharacters">
            <summary>
            Set storing the valid escape characters. (Normally only a backslash '\' character, but could be
            set to something else.
            </summary></member>
        <member name="F:Plossum.CommandLine.Lexer.mAssignmentCharacters">
            <summary>
            Table mapping valid assignment characters to their respective option values.
            </summary></member>
        <member name="T:Plossum.Resources.CommandLineStrings">
            <summary>
            A strongly-typed resource class, for looking up localized strings, etc.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.ResourceManager">
            <summary>
            Returns the cached ResourceManager instance used by this class.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.Culture">
            <summary>
            Overrides the current thread's CurrentUICulture property for all
            resource lookups using this strongly typed resource class.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.AccessToTheSpecifiedFile0IsDenied">
            <summary>
            Looks up a localized string similar to Access to the specified file ("{0}") is denied.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.Alias0IsInvalidForOption1BoolFunctionIsSetTo2AndThe3OptionStyleIsEnabledWhichProhibitsAnyNameLongerThanOneCharacter">
            <summary>
            Looks up a localized string similar to Alias "{0}" is invalid for option "{1}"; BoolFunction is set to {2} and the {3} option style is enabled which prohibits any name longer than one character.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.AliasName0IsAlreadyInUseByAnotherOption">
            <summary>
            Looks up a localized string similar to Alias name "{0}" is already in use by another option.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.AllOfTheOptions0MustBeSpecified">
            <summary>
            Looks up a localized string similar to All of the options {0} must be specified.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.Arg0MustNotBeLessThan1">
            <summary>
            Looks up a localized string similar to {0} must not be less than {1}.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.ArgMustBeGreaterThanZero">
            <summary>
            Looks up a localized string similar to {0} must be greater than zero.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.ArgMustBeNonNegative">
            <summary>
            Looks up a localized string similar to {0} must be non-negative.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.AssignmentCharactersMustNotBeChangedWhileParseInProgress">
            <summary>
            Looks up a localized string similar to Assignment characters must not be changed while parse in progress.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.AtLeastOneOfTheOption0MustBeSpecified">
            <summary>
            Looks up a localized string similar to At least one of the option {0} must be specified.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.AtMostOneOfTheOptions0MayBeSpecifiedAtOnce">
            <summary>
            Looks up a localized string similar to At most one of the options {0} may be specified at once.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.BoolFunctionCanNotBeSetTo0ForOptionWithANameLongerThanOneCharacterWhenOptionStyle1IsSpecifiedInThe2Attribute">
            <summary>
            Looks up a localized string similar to BoolFunction can not be set to '{0}' for option with a name longer than one character when option style '{1}' is specified in the {2} attribute.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.BoolFunctionMayNotBeSetTo0WhenOptionStyle1IsNotSpecifiedInThe2Attribute">
            <summary>
            Looks up a localized string similar to BoolFunction may not be set to '{0}' when option style '{1}' is not specified in the {2} attribute.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.BoolFunctionMayNotBeSetTo0WhenOptionStyle1IsSpecifiedInThe2Attribute">
            <summary>
            Looks up a localized string similar to BoolFunction may not be set to '{0}' when option style '{1}' is specified in the {2} attribute.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.DefaultCommandLineExceptionErrorMessage">
            <summary>
            Looks up a localized string similar to Error in commandline.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.DefaultMissingOptionNameExceptionMessage">
            <summary>
            Looks up a localized string similar to Missing option name for switch on command line.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.EmptyOptionNameIsNotAllowed">
            <summary>
            Looks up a localized string similar to Empty option name is not allowed.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.EndOfInput">
            <summary>
            Looks up a localized string similar to End of input.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.FileNotFound0">
            <summary>
            Looks up a localized string similar to File not found ("{0}").
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.InternalErrorNonImplementedGroupRequirementSpecified">
            <summary>
            Looks up a localized string similar to Internal error; non-implemented group requirement specified.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.InternalErrorOptionSpecifiedInProhibitionDoesNotExist">
            <summary>
            Looks up a localized string similar to Internal error; option specified in prohibition does not exist.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.InternalErrorOptionValueWasSetMoreThanMaxOccursNumberOfTimes">
            <summary>
            Looks up a localized string similar to Internal error; Option.Value was set more than MaxOccurs number of times.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.InternalErrorUnimplementedBoolFunction0UsedInOption1">
            <summary>
            Looks up a localized string similar to Internal error; unimplemented BoolFunction {0} used in option "{1}".
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.InternalErrorUnimplementedTokenTypeReturnedToCommandLineParser">
            <summary>
            Looks up a localized string similar to Internal error; Unimplemented token type returned to CommandLineParser.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.InternalErrorUnimplementedVerticalAlignmentUsed">
            <summary>
            Looks up a localized string similar to Internal error; Unimplemented VerticalAlignment used.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.InvalidEnumerationValue0">
            <summary>
            Looks up a localized string similar to Invalid enumeration value "{0}".
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.InvalidIdOfGroupIdMustNotBeNullOrEmpty">
            <summary>
            Looks up a localized string similar to invalid Id of group; Id must not be null or empty.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.InvalidValue0ForOption1">
            <summary>
            Looks up a localized string similar to Invalid value ({0}) for option "{1}".
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.InvalidValue0ForOption1TheValueMustBeOneOf2">
            <summary>
            Looks up a localized string similar to Invalid value "{0}" for option "{1}"; The value must be one of {2}.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.LastItemOfExclusiveList">
            <summary>
            Looks up a localized string similar to or "{0}".
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.MissingClosingQuote">
            <summary>
            Looks up a localized string similar to Missing closing quote.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.MissingClosingQuoteForQuotedValue">
            <summary>
            Looks up a localized string similar to Missing closing quote for quoted value.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.MissingClosingQuoteForValue0">
            <summary>
            Looks up a localized string similar to Missing closing quote for quote command line value: {0}.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.MissingRequiredAttributeForACommandLineManagerObjectCommandLineManagerAttribute">
            <summary>
            Looks up a localized string similar to Missing required attribute for a command line manager object: CommandLineManagerAttribute.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.MissingRequiredOption0">
            <summary>
            Looks up a localized string similar to Missing required option "{0}"..
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.MissingRequiredValueForOption0">
            <summary>
            Looks up a localized string similar to Missing required value for option "{0}".
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.OneOfTheOptions0MustBeSpecified">
            <summary>
            Looks up a localized string similar to One of the options {0} must be specified.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.OnLine0InFile1">
            <summary>
            Looks up a localized string similar to  (on line {0} in {1}).
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.Only0OccurenceSOfOption1FoundItMustBeSpecifiedAtLeast2TimeS">
            <summary>
            Looks up a localized string similar to Only {0} occurence(s) of option "{1}" found; it must be specified at least {2} time(s).
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.Only0OccurenceSOfOption1FoundItMustBeSpecifiedExactly2TimeS">
            <summary>
            Looks up a localized string similar to Only {0} occurence(s) of option "{1}" found; it must be specified exactly {2} time(s).
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.OnlyOneOfTheOptions0MayBeSpecified">
            <summary>
            Looks up a localized string similar to Only one of the options {0} may be specified.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.Option0DoesNotAcceptAValue">
            <summary>
            Looks up a localized string similar to Option "{0}" does not accept a value.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.Option0MayNotBeSpecifiedTogetherWithOption1">
            <summary>
            Looks up a localized string similar to Option "{0}" may not be specified together with option "{1}".
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.Option0MustNotBeSpecifiedMoreThan1Times">
            <summary>
            Looks up a localized string similar to Option "{0}" must not be specified more than {1} times.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.Option0MustNotBeSpecifiedMultipleTimes">
            <summary>
            Looks up a localized string similar to Option "{0}" must not be specified multiple times.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.Options">
            <summary>
            Looks up a localized string similar to Options:.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.RedefinitionOfCommandLineOptionWithParameterName01">
            <summary>
            Looks up a localized string similar to Redefinition of command line option with parameter name "{0}" ({1}).
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.RedefinitionOfGroupWithId01">
            <summary>
            Looks up a localized string similar to Redefinition of group with id "{0}" ({1}).
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.TheSpecifiedPath0IsInvalid">
            <summary>
            Looks up a localized string similar to The specified path ("{0}") is invalid.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.TheSpecifiedPath0IsTooLong">
            <summary>
            Looks up a localized string similar to The specified path ("{0}") is too long.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.UndefinedOption0ReferencedFromProhibitionSectionOfOption1">
            <summary>
            Looks up a localized string similar to Undefined option "{0}" referenced from prohibition section of option "{1}".
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.Unexpected0CharacterOnCommandLine">
            <summary>
            Looks up a localized string similar to unexpected '{0}' character on command line.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.UnexpectedEndOfString">
            <summary>
            Looks up a localized string similar to Unexpected end of string.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.UnknownOption0">
            <summary>
            Looks up a localized string similar to Unknown option "{0}".
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.UsingCaseInsensitiveNames">
            <summary>
            Looks up a localized string similar to using case insensitive names.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.UsingCaseSensitiveNames">
            <summary>
            Looks up a localized string similar to using case sensitive names.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.ValueFor03OutOfRangeExpectedNumericBetween1And2">
            <summary>
            Looks up a localized string similar to Value specified for "{0}" ({3}) is out of range; expected a numeric value between {1} and {2}.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.ValueWasEitherTooLargeOrTooSmallForThisOptionType">
            <summary>
            Looks up a localized string similar to Value was either too large or too small for this option type.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.Version">
            <summary>
            Looks up a localized string similar to version.
            </summary></member>
        <member name="P:Plossum.Resources.CommandLineStrings.WidthMustNotBeLessThan0">
            <summary>
            Looks up a localized string similar to width must not be less than {0}.
            </summary></member>
        <member name="T:Plossum.CommandLine.MissingClosingQuoteException">
            <summary>
            Exception indicating that a closing quote was missing from a value on the command line.
            </summary></member>
        <member name="M:Plossum.CommandLine.MissingClosingQuoteException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.MissingClosingQuoteException" /> class.
            </summary></member>
        <member name="M:Plossum.CommandLine.MissingClosingQuoteException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.MissingClosingQuoteException" /> class.
            </summary>
            <param name="message">The message.</param></member>
        <member name="M:Plossum.CommandLine.MissingClosingQuoteException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.MissingClosingQuoteException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param></member>
        <member name="M:Plossum.CommandLine.MissingClosingQuoteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.MissingClosingQuoteException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception></member>
        <member name="T:Plossum.CommandLine.MissingOptionNameException">
            <summary>
            Exception indicating that an option switch character was specified on the command line, but the name
            for the option was missing.
            </summary></member>
        <member name="M:Plossum.CommandLine.MissingOptionNameException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.MissingOptionNameException" /> class.
            </summary></member>
        <member name="M:Plossum.CommandLine.MissingOptionNameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.MissingOptionNameException" /> class.
            </summary>
            <param name="message">The message.</param></member>
        <member name="M:Plossum.CommandLine.MissingOptionNameException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.MissingOptionNameException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param></member>
        <member name="M:Plossum.CommandLine.MissingOptionNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.MissingOptionNameException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception></member>
        <member name="T:Plossum.CommandLine.Option">
            <summary>
            Representation of a command line option.
            </summary>
            <remarks>Objects of this class is created by the constructor of <see cref="T:Plossum.CommandLine.CommandLineParser" />. This object is then used
            for setting and getting values of the option manager object used by the parser.</remarks></member>
        <member name="M:Plossum.CommandLine.Option.#ctor(Plossum.CommandLine.CommandLineOptionAttribute,System.Reflection.MemberInfo,System.Object,C5.ICollection{Plossum.CommandLine.OptionGroup},System.Globalization.NumberFormatInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.Option" /> class.
            </summary>
            <param name="attribute">The attribute describing this option.</param>
            <param name="memberInfo">The <see cref="T:System.Reflection.MemberInfo" /> object pointing to the member to which the attribute was applied.</param>
            <param name="cmdLineObject">The command line manager object.</param>
            <param name="optionGroups">A complete list of all available option groups.</param>
            <param name="numberFormatInfo">The number format info to use for parsing numerical arguments.</param></member>
        <member name="P:Plossum.CommandLine.Option.Value">
            <summary>
            Sets the value of the member of the option manager representing this option.
            </summary>
            <value>the value of the member of the option manager representing this option.</value></member>
        <member name="P:Plossum.CommandLine.Option.RequiresValue">
            <summary>
            Gets a value indicating whether this option requires a value to be assigned to it.
            </summary>
            <value><c>true</c> if this option requires a value to be assigned to it; otherwise, <c>false</c>.</value></member>
        <member name="P:Plossum.CommandLine.Option.RequireExplicitAssignment">
            <summary>
            Gets or sets a value indicating whether this option requires explicit assignment.
            </summary>
            <value>
            	<c>true</c> if this option requires explicit assignment; otherwise, <c>false</c>.
            </value></member>
        <member name="P:Plossum.CommandLine.Option.ProhibitedBy">
            <summary>
            Gets the collection containing the options prohibiting this option from being specified.
            </summary>
            <value>The collection containing the options prohibiting this option from being specified.</value></member>
        <member name="P:Plossum.CommandLine.Option.Group">
            <summary>
            Gets the group to which this option belongs, or null if this option does not belong to any group.
            </summary>
            <value>The group to which this option belongs, or null if this option does not belong to any group.</value></member>
        <member name="P:Plossum.CommandLine.Option.Name">
            <summary>
            Gets the name of this option
            </summary>
            <value>The name of this option</value></member>
        <member name="P:Plossum.CommandLine.Option.BoolFunction">
            <summary>
            Gets the bool function used by this option
            </summary>
            <value>The bool function used by this option</value></member>
        <member name="P:Plossum.CommandLine.Option.MaxOccurs">
            <summary>
            Gets the max occurs.
            </summary>
            <value>The max occurs.</value></member>
        <member name="P:Plossum.CommandLine.Option.MinOccurs">
            <summary>
            Gets the min occurs.
            </summary>
            <value>The min occurs.</value></member>
        <member name="P:Plossum.CommandLine.Option.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value></member>
        <member name="P:Plossum.CommandLine.Option.SetCount">
            <summary>
            Gets or sets the number of times the value of this option has been set.
            </summary>
            <value>The number of times the value of this option has been set.</value></member>
        <member name="P:Plossum.CommandLine.Option.AcceptsValue">
            <summary>
            Gets a value indicating whether a value may be assigned to this option.
            </summary>
            <value><c>true</c> if a value may be assigned to this option; otherwise, <c>false</c>.</value></member>
        <member name="P:Plossum.CommandLine.Option.HasDefaultValue">
            <summary>
            Gets a value indicating whether this instance has default value.
            </summary>
            <value>
            	<c>true</c> if this instance has default value; otherwise, <c>false</c>.
            </value></member>
        <member name="P:Plossum.CommandLine.Option.IsBooleanType">
            <summary>
            Gets a value indicating whether this instance is boolean type.
            </summary>
            <value>
            	<c>true</c> if this instance is boolean type; otherwise, <c>false</c>.
            </value></member>
        <member name="P:Plossum.CommandLine.Option.IsAlias">
            <summary>
            Gets a value indicating whether this instance is an alias.
            </summary>
            <value><c>true</c> if this instance is alias; otherwise, <c>false</c>.</value></member>
        <member name="P:Plossum.CommandLine.Option.DefiningOption">
            <summary>
            Gets the defining option.
            </summary>
            <value>The defining option.</value>
            <remarks>For an <see cref="T:Plossum.CommandLine.Option" /> the value returned will be equal to the Option itself, for an <see cref="T:Plossum.CommandLine.OptionAlias" /> it
            will be the <see cref="T:Plossum.CommandLine.Option" /> to which the alias refers.</remarks></member>
        <member name="P:Plossum.CommandLine.Option.MinValue">
            <summary>
            Gets the min value.
            </summary>
            <value>The min value, or null if no minimum value was specified.</value></member>
        <member name="P:Plossum.CommandLine.Option.MaxValue">
            <summary>
            Gets the max value.
            </summary>
            <value>The max value or null if no maximum value was specified.</value></member>
        <member name="P:Plossum.CommandLine.Option.IsIntegralType">
            <summary>
            Gets a value indicating whether this instance is integral type.
            </summary>
            <value>
            	<c>true</c> if this instance is integral type; otherwise, <c>false</c>.
            </value></member>
        <member name="P:Plossum.CommandLine.Option.IsFloatingPointType">
            <summary>
            Gets a value indicating whether this instance is floating point type.
            </summary>
            <value>
            	<c>true</c> if this instance is floating point type; otherwise, <c>false</c>.
            </value></member>
        <member name="P:Plossum.CommandLine.Option.IsDecimalType">
            <summary>
            Gets a value indicating whether this instance is decimal type.
            </summary>
            <value>
            	<c>true</c> if this instance is decimal type; otherwise, <c>false</c>.
            </value></member>
        <member name="P:Plossum.CommandLine.Option.IsNumericalType">
            <summary>
            Gets a value indicating whether this instance is numerical type.
            </summary>
            <value>
            	<c>true</c> if this instance is numerical type; otherwise, <c>false</c>.
            </value></member>
        <member name="P:Plossum.CommandLine.Option.ValidEnumerationValues">
            <summary>
            Gets the valid enumeration values.
            </summary>
            <value>The valid enumeration values of this option if the base type for this option is an enum, or a null reference otherwise.</value></member>
        <member name="M:Plossum.CommandLine.Option.SetDefaultValue">
            <summary>
            Sets this option to its default value.
            </summary></member>
        <member name="M:Plossum.CommandLine.Option.AddAlias(System.String)">
            <summary>
            Adds the alias.
            </summary>
            <param name="alias">The alias.</param></member>
        <member name="P:Plossum.CommandLine.Option.Aliases">
            <summary>
            Gets the names of the aliases referring to this option.
            </summary>
            <value>The names of the aliases referring to this option.</value></member>
        <member name="M:Plossum.CommandLine.Option.GetCheckedValueForSetOperation(System.Object)">
            <summary>
            Gets the checked value for set operation.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
            <exception cref="T:System.FormatException">The string supplied for the value was not in the correct format</exception>
            <exception cref="T:System.OverflowException">The value supplied represented a number less than <see cref="P:Plossum.CommandLine.Option.MinValue" /> or greater than <see cref="P:Plossum.CommandLine.Option.MaxValue" /></exception></member>
        <member name="F:Plossum.CommandLine.Option.mSetCount">
            <summary>
            Counts the number of times the value was set for this option
            </summary></member>
        <member name="T:Plossum.CommandLine.OptionNameToken">
            <summary>
            <see cref="T:Plossum.CommandLine.Token" /> representing an option name as found on the command line.
            </summary></member>
        <member name="M:Plossum.CommandLine.OptionNameToken.#ctor(System.String,Plossum.CommandLine.OptionStyles)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.OptionNameToken" /> class.
            </summary>
            <param name="name">The name of this option.</param>
            <param name="optionStyle">The option style.</param></member>
        <member name="P:Plossum.CommandLine.OptionNameToken.OptionStyle">
            <summary>
            Gets the option style.
            </summary>
            <value>The option style.</value></member>
        <member name="P:Plossum.CommandLine.OptionNameToken.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value></member>
        <member name="T:Plossum.CommandLine.OptionStyleManager">
            <summary>
            Utility class for manipulating <see cref="T:Plossum.CommandLine.OptionStyles" />.
            </summary></member>
        <member name="M:Plossum.CommandLine.OptionStyleManager.IsAllEnabled(Plossum.CommandLine.OptionStyles,Plossum.CommandLine.OptionStyles)">
            <summary>
            Determines whether all of the specified <paramref name="flags" /> are enabled in the specified <paramref name="optionStyle" />.
            </summary>
            <param name="optionStyle">The option style.</param>
            <param name="flags">The flags.</param>
            <returns>
            	<c>true</c> if all of the specified <paramref name="flags" /> are enabled in the specified <paramref name="optionStyle" />; otherwise, <c>false</c>.
            </returns></member>
        <member name="M:Plossum.CommandLine.OptionStyleManager.IsAnyEnabled(Plossum.CommandLine.OptionStyles,Plossum.CommandLine.OptionStyles)">
            <summary>
            Determines whether any of the specified <paramref name="flags" /> are enabled in the specified <paramref name="optionStyle" />.
            </summary>
            <param name="optionStyle">The option style.</param>
            <param name="flags">The flags.</param>
            <returns>
            	<c>true</c> if any of the specified <paramref name="flags" /> are enabled in the specified <paramref name="optionStyle" />; otherwise, <c>false</c>.
            </returns></member>
        <member name="M:Plossum.CommandLine.OptionStyleManager.IsValid(Plossum.CommandLine.OptionStyles)">
            <summary>
            Determines whether the specified option style is valid.
            </summary>
            <param name="optionStyle">The option style.</param>
            <returns>
            	<c>true</c> if the specified option style is valid; otherwise, <c>false</c>.
            </returns>
            <remarks>An option style is invalid if the <see cref="F:Plossum.CommandLine.OptionStyles.ShortUnix" /> flag is not enabled, but the
            <see cref="F:Plossum.CommandLine.OptionStyles.Group" /> or <see cref="F:Plossum.CommandLine.OptionStyles.Plus" /> is. This normally doesn't occur
            if you only use the binary or to combine flags however, since the values of the group and plus
            options also include the short unix style.</remarks></member>
        <member name="M:Plossum.CommandLine.OptionStyleManager.GetPrefix(Plossum.CommandLine.OptionStyles,System.String)">
            <summary>
            Gets the switch character used to specify an option of the specified style on the command line.
            </summary>
            <param name="optionStyle">The option style.</param>
            <param name="optionName">The name of the option.</param>
            <returns>the switch character used to specify this option.</returns>
            <remarks><para>If <paramref name="optionStyle" /> includes several option styles, the switch for the most
            specific one representing a single option style prefix is returned. The switches for the corresponding
            styles are as follows (in order from most specific to least):</para>
            <para>
            <list type="table">
            <listheader>
            <item>
            <term>OptionStyle</term>
            <term>Prefix</term>
            </item>
            </listheader>
            <item>
            <term><i>All</i></term>
            <term><c>+</c></term>
            </item>
            <item>
            <term><b>Plus</b></term>
            <term><c>+</c></term>
            </item>
            <item>
            <term><i>Group</i></term>
            <term><c>-</c></term>
            </item>
            <item>
            <term><b>ShortUnix</b></term>
            <term><c>-</c></term>
            </item>
            <item>
            <term><b>File</b></term>
            <term><c>@</c></term>
            </item>
            <item>
            <term><b>LongUnix</b></term>
            <term><c>--</c></term>
            </item>
            <item>
            <term><b>Windows</b></term>
            <term><c>/</c></term>
            </item>
            </list>
            (Items in <i>italics</i> does not represent a single unique prefix)
            </para>
            </remarks></member>
        <member name="M:Plossum.CommandLine.OptionStyleManager.PrefixOptionForDescription(Plossum.CommandLine.OptionStyles,System.String)">
            <summary>
            Prefixes the option name with the prefix(es) with which it should be used.
            </summary>
            <param name="optionStyle">The option style.</param>
            <param name="optionName">Name of the option.</param>
            <returns>A string representing the name of the option prefixed according to the enabled option styles specified.</returns>
            <remarks>This method always prefers prefixing options with unix style to windows style prefixes if both are
            enabled.  If <see cref="F:Plossum.CommandLine.OptionStyles.Plus" /> is enabled, the option will be prefixed with "[+|-]" to indicate
            that either prefix may be used.</remarks></member>
        <member name="T:Plossum.CommandLine.ParseErrorCodes">
            <summary>
            Indicates the type of the error of a <see cref="T:Plossum.CommandLine.ErrorInfo" />.
            </summary>
            <seealso cref="P:Plossum.CommandLine.CommandLineParser.Errors" /></member>
        <member name="F:Plossum.CommandLine.ParseErrorCodes.MissingClosingQuote">
            <summary>
            A value was quoted but no closing quote was found on the command line.
            </summary></member>
        <member name="F:Plossum.CommandLine.ParseErrorCodes.EmptyOptionName">
            <summary>
            An option switch character was specified but without an option name following it.
            </summary></member>
        <member name="F:Plossum.CommandLine.ParseErrorCodes.UnknownOption">
            <summary>
            The option specified does not exist.
            </summary></member>
        <member name="F:Plossum.CommandLine.ParseErrorCodes.MissingRequiredOption">
            <summary>
            A required option was not specified.
            </summary></member>
        <member name="F:Plossum.CommandLine.ParseErrorCodes.UnexpectedAssignment">
            <summary>
            An assignment character was found where it should not have been on the command line.
            </summary></member>
        <member name="F:Plossum.CommandLine.ParseErrorCodes.IllegalCardinality">
            <summary>
            An option is specified either too many times or too few times on the command line.
            </summary></member>
        <member name="F:Plossum.CommandLine.ParseErrorCodes.MissingValue">
            <summary>
            An option requiring a value was specified without a value.
            </summary></member>
        <member name="F:Plossum.CommandLine.ParseErrorCodes.AssignmentToNonValueOption">
            <summary>
            An option not accepting a value was explicitly assigned a value.
            </summary></member>
        <member name="F:Plossum.CommandLine.ParseErrorCodes.OptionProhibited">
            <summary>
            An option specified was prohibited by another option that was also specified.
            </summary></member>
        <member name="F:Plossum.CommandLine.ParseErrorCodes.Overflow">
            <summary>
            A value assigned to a numerical option was outside the range specified by
            <see cref="P:Plossum.CommandLine.CommandLineOptionAttribute.MinValue" /> and <see cref="P:Plossum.CommandLine.CommandLineOptionAttribute.MaxValue" />.
            </summary></member>
        <member name="F:Plossum.CommandLine.ParseErrorCodes.InvalidFormat">
            <summary>
            The value specified for an option was in an invalid format, or an illegal value for the specified type.
            </summary></member>
        <member name="F:Plossum.CommandLine.ParseErrorCodes.FileNotFound">
            <summary>
            The file specified was not found, or could not be opened for reading.
            </summary></member>
        <member name="F:Plossum.CommandLine.ParseErrorCodes.InvalidValue">
            <summary>
            The value specified for the option failed user validation.
            </summary></member>
        <member name="F:Plossum.CommandLine.ParseErrorCodes.UnknownError">
            <summary>
            An unknown error occured.
            </summary></member>
        <member name="T:Plossum.CommandLine.QuotationInfo">
            <summary>
            Represents information about the escapable characters within a quoted value.
            </summary></member>
        <member name="M:Plossum.CommandLine.QuotationInfo.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.QuotationInfo" /> class.
            </summary>
            <param name="quotationMark">The quotation mark used for this quotation.</param></member>
        <member name="P:Plossum.CommandLine.QuotationInfo.QuotationMark">
            <summary>
            Gets the quotation mark.
            </summary>
            <value>The quotation mark.</value></member>
        <member name="M:Plossum.CommandLine.QuotationInfo.AddEscapeCode(System.Char,System.Char)">
            <summary>
            Adds the escape code to this quotation.
            </summary>
            <param name="code">The code, i.e. the character that will be used after the escape
            character to denote this escape sequence.</param>
            <param name="replacement">The character with which the escape sequence will be replaced.</param></member>
        <member name="M:Plossum.CommandLine.QuotationInfo.RemoveEscapeCode(System.Char)">
            <summary>
            Removes an escape code from this quotation.
            </summary>
            <param name="code">The code to remove.</param></member>
        <member name="M:Plossum.CommandLine.QuotationInfo.IsEscapeCode(System.Char)">
            <summary>
            Determines whether the specified character is an escape code within this quotation.
            </summary>
            <param name="code">The code.</param>
            <returns>
            	<c>true</c> if the specified character is an escape code within this quotation; otherwise, <c>false</c>.
            </returns></member>
        <member name="M:Plossum.CommandLine.QuotationInfo.EscapeCharacter(System.Char)">
            <summary>
            Escapes the escape code character specified.
            </summary>
            <param name="code">The code.</param>
            <returns>The replacement character for the specified escape code if one is available in this
            quotation, otherwise returns the character unchanged.</returns></member>
        <member name="M:Plossum.CommandLine.QuotationInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns></member>
        <member name="M:Plossum.CommandLine.QuotationInfo.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns></member>
        <member name="T:Plossum.CommandLine.Token">
            <summary>
            Represents a command line token.
            </summary></member>
        <member name="T:Plossum.CommandLine.Token.TokenTypes">
            <summary>
            Represents the various token types
            </summary></member>
        <member name="F:Plossum.CommandLine.Token.TokenTypes.ValueToken">
            <summary>
            A token of type <see cref="T:Plossum.CommandLine.ValueToken" />
            </summary></member>
        <member name="F:Plossum.CommandLine.Token.TokenTypes.AssignmentToken">
            <summary>
            A token of type <see cref="T:Plossum.CommandLine.AssignmentToken" />
            </summary></member>
        <member name="F:Plossum.CommandLine.Token.TokenTypes.OptionNameToken">
            <summary>
            A token of type <see cref="T:Plossum.CommandLine.OptionNameToken" />
            </summary></member>
        <member name="F:Plossum.CommandLine.Token.TokenTypes.EndToken">
            <summary>
            A token of type <see cref="T:Plossum.CommandLine.EndToken" />
            </summary></member>
        <member name="F:Plossum.CommandLine.Token.TokenTypes.OptionFileToken">
            <summary>
            A token of type <see cref="T:Plossum.CommandLine.OptionFileToken" />
            </summary></member>
        <member name="M:Plossum.CommandLine.Token.#ctor(Plossum.CommandLine.Token.TokenTypes,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.Token" /> class.
            </summary>
            <param name="tokenType">Type of the token.</param>
            <param name="text">The text representing this token. (Mainly for use in error messages etc)</param></member>
        <member name="P:Plossum.CommandLine.Token.TokenType">
            <summary>
            Gets the type of the token.
            </summary>
            <value>The type of the token.</value></member>
        <member name="P:Plossum.CommandLine.Token.Text">
            <summary>
            Gets the text.
            </summary>
            <value>The text.</value></member>
        <member name="T:Plossum.CommandLine.ValueToken">
            <summary>
            A <see cref="T:Plossum.CommandLine.Token" /> representing a value on the command line. A value is basically anything that
            is not the name of an option or another character sequence with a special meaning.
            </summary></member>
        <member name="M:Plossum.CommandLine.ValueToken.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Plossum.CommandLine.ValueToken" /> class.
            </summary>
            <param name="value">The value.</param></member>
        <member name="P:Plossum.CommandLine.ValueToken.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value></member>
        <member name="T:Plossum.StringFormatter">
            <summary>
            Class performing various formatting operations on strings based on fixed width characters.
            </summary></member>
        <member name="M:Plossum.StringFormatter.Align(System.String,System.Int32,Plossum.Alignment)">
            <summary>
            Aligns the specified string within a field of the desired width, cropping it if it doesn't fit, and expanding it otherwise.
            </summary>
            <param name="str">The string to align.</param>
            <param name="width">The width of the field in characters in which the string should be fitted.</param>
            <param name="alignment">The aligmnent that will be used for fitting the string in the field in case it is shorter than the specified field width.</param>
            <returns>
            A string exactly <paramref name="width" /> characters wide, containing the specified string <paramref name="str" /> fitted
            according to the parameters specified.
            </returns>
            <remarks>
            <para>If the string consists of several lines, each line will be aligned according to the specified parameters.</para>
            <para>The padding character used will be the normal white space character (' '), and the ellipsis used will be the
            string <b>"..."</b>. Cropping will be done on the right hand side of the string.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> was a null reference (<b>Nothing</b> in Visual Basic)</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="width" /> was less than, or equal to zero.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="width" /> is less than the length of the specified <paramref name="ellipsis" />, or,
            the cropping specified is <see cref="F:Plossum.Cropping.Both" /> and <paramref name="width" /> was less than <i>twice</i> the
            length of the <paramref name="ellipsis" /></exception></member>
        <member name="M:Plossum.StringFormatter.Align(System.String,System.Int32,Plossum.Alignment,Plossum.Cropping)">
            <summary>
            Aligns the specified string within a field of the desired width, cropping it if it doesn't fit, and expanding it otherwise.
            </summary>
            <param name="str">The string to align.</param>
            <param name="width">The width of the field in characters in which the string should be fitted.</param>
            <param name="alignment">The aligmnent that will be used for fitting the string in the field in case it is shorter than the specified field width.</param>
            <param name="cropping">The method that will be used for cropping if the string is too wide to fit in the specified width.</param>
            <returns>
            A string exactly <paramref name="width" /> characters wide, containing the specified string <paramref name="str" /> fitted
            according to the parameters specified.
            </returns>
            <remarks>
            <para>If the string consists of several lines, each line will be aligned according to the specified parameters.</para>
            <para>The padding character used will be the normal white space character (' '), and the ellipsis used will be the
            string <b>"..."</b>.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> was a null reference (<b>Nothing</b> in Visual Basic)</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="width" /> was less than, or equal to zero.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="width" /> is less than the length of the specified <paramref name="ellipsis" />, or,
            the cropping specified is <see cref="F:Plossum.Cropping.Both" /> and <paramref name="width" /> was less than <i>twice</i> the
            length of the <paramref name="ellipsis" /></exception></member>
        <member name="M:Plossum.StringFormatter.Align(System.String,System.Int32,Plossum.Alignment,Plossum.Cropping,System.String)">
            <summary>
            Aligns the specified string within a field of the desired width, cropping it if it doesn't fit, and expanding it otherwise.
            </summary>
            <param name="str">The string to align.</param>
            <param name="width">The width of the field in characters in which the string should be fitted.</param>
            <param name="alignment">The aligmnent that will be used for fitting the string in the field in case it is shorter than the specified field width.</param>
            <param name="cropping">The method that will be used for cropping if the string is too wide to fit in the specified width.</param>
            <param name="ellipsis">A string that will be inserted at the cropped side(s) of the string to denote that the string has been cropped.</param>
            <returns>
            A string exactly <paramref name="width" /> characters wide, containing the specified string <paramref name="str" /> fitted
            according to the parameters specified.
            </returns>
            <remarks>
            <para>If the string consists of several lines, each line will be aligned according to the specified parameters.</para>
            <para>The padding character used will be the normal white space character (' ').</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> was a null reference (<b>Nothing</b> in Visual Basic)</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="width" /> was less than, or equal to zero.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="width" /> is less than the length of the specified <paramref name="ellipsis" />, or,
            the cropping specified is <see cref="F:Plossum.Cropping.Both" /> and <paramref name="width" /> was less than <i>twice</i> the
            length of the <paramref name="ellipsis" /></exception></member>
        <member name="M:Plossum.StringFormatter.Align(System.String,System.Int32,Plossum.Alignment,Plossum.Cropping,System.String,System.Char)">
            <summary>
            Aligns the specified string within a field of the desired width, cropping it if it doesn't fit, and expanding it otherwise.
            </summary>
            <param name="str">The string to align.</param>
            <param name="width">The width of the field in characters in which the string should be fitted.</param>
            <param name="alignment">The aligmnent that will be used for fitting the string in the field in case it is shorter than the specified field width.</param>
            <param name="cropping">The method that will be used for cropping if the string is too wide to fit in the specified width.</param>
            <param name="ellipsis">A string that will be inserted at the cropped side(s) of the string to denote that the string has been cropped.</param>
            <param name="padCharacter">The character that will be used for padding the string in case it is shorter than the specified field width.</param>
            <returns>
            A string exactly <paramref name="width" /> characters wide, containing the specified string <paramref name="str" /> fitted
            according to the parameters specified.
            </returns>
            <remarks>If the string consists of several lines, each line will be aligned according to the specified parameters.</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> was a null reference (<b>Nothing</b> in Visual Basic)</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="width" /> was less than, or equal to zero.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="width" /> is less than the length of the specified <paramref name="ellipsis" />, or,
            the cropping specified is <see cref="F:Plossum.Cropping.Both" /> and <paramref name="width" /> was less than <i>twice</i> the
            length of the <paramref name="ellipsis" /></exception></member>
        <member name="M:Plossum.StringFormatter.WordWrap(System.String,System.Int32)">
            <summary>
            Performs word wrapping on the specified string, making it fit within the specified width.
            </summary>
            <param name="str">The string to word wrap.</param>
            <param name="width">The width of the field in which to fit the string.</param>
            <returns>A word wrapped version of the original string aligned and padded as specified.</returns>
            <remarks><para>No padding will be performed on strings that are shorter than the specified width, and each line will be
            left aligned.</para>
            <para>This method uses <see cref="F:Plossum.WordWrappingMethod.Optimal" /> to perform word wrapping.</para></remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> was a null reference (<b>Nothing</b> in Visual Basic)</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="width" /> was less than, or equal to zero.</exception></member>
        <member name="M:Plossum.StringFormatter.WordWrap(System.String,System.Int32,Plossum.WordWrappingMethod)">
            <summary>
            Performs word wrapping on the specified string, making it fit within the specified width.
            </summary>
            <param name="str">The string to word wrap.</param>
            <param name="width">The width of the field in which to fit the string.</param>
            <param name="method">The method to use for word wrapping.</param>
            <returns>A word wrapped version of the original string aligned and padded as specified.</returns>
            <remarks>No padding will be performed on strings that are shorter than the specified width, and each line will be
            left aligned.</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> was a null reference (<b>Nothing</b> in Visual Basic)</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="width" /> was less than, or equal to zero.</exception></member>
        <member name="M:Plossum.StringFormatter.WordWrap(System.String,System.Int32,Plossum.WordWrappingMethod,Plossum.Alignment)">
            <summary>
            Performs word wrapping on the specified string, making it fit within the specified width and additionally aligns each line
            according to the <see cref="T:Plossum.Alignment" /> specified.
            </summary>
            <param name="str">The string to word wrap and align.</param>
            <param name="width">The width of the field in which to fit the string.</param>
            <param name="method">The method to use for word wrapping.</param>
            <param name="alignment">The alignment to use for each line of the resulting string.</param>
            <returns>A word wrapped version of the original string aligned and padded as specified.</returns>
            <remarks>If padding is required, the normal simple white space character (' ') will be used.</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> was a null reference (<b>Nothing</b> in Visual Basic)</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="width" /> was less than, or equal to zero.</exception></member>
        <member name="M:Plossum.StringFormatter.WordWrap(System.String,System.Int32,Plossum.WordWrappingMethod,Plossum.Alignment,System.Char)">
            <summary>
            Performs word wrapping on the specified string, making it fit within the specified width and additionally aligns each line
            according to the <see cref="T:Plossum.Alignment" /> specified.
            </summary>
            <param name="str">The string to word wrap and align.</param>
            <param name="width">The width of the field in which to fit the string.</param>
            <param name="method">The method to use for word wrapping.</param>
            <param name="alignment">The alignment to use for each line of the resulting string.</param>
            <param name="padCharacter">The character to use for padding lines that are shorter than the specified width.</param>
            <returns>A word wrapped version of the original string aligned and padded as specified.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> was a null reference (<b>Nothing</b> in Visual Basic)</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="width" /> was less than, or equal to zero.</exception></member>
        <member name="M:Plossum.StringFormatter.SplitAtLineBreaks(System.String)">
            <summary>
            Splits the specified strings at line breaks, resulting in an indexed collection where each item represents one line of the
            original string.
            </summary>
            <param name="str">The string to split.</param>
            <returns>an indexed collection where each item represents one line of the
            original string.</returns>
            <remarks>This might seem identical to the String.Split method at first, but it is not exactly, since this method
            recognizes line breaks in the three formats: "\n", "\r" and "\r\n". Note that any newline characters will not be present
            in the returned collection.</remarks></member>
        <member name="M:Plossum.StringFormatter.SplitAtLineBreaks(System.String,System.Boolean)">
            <summary>
            Splits the specified strings at line breaks, resulting in an indexed collection where each item represents one line of the
            original string.
            </summary>
            <param name="str">The string to split.</param>
            <param name="removeEmptyLines">if set to <c>true</c> any empty lines will be removed from the resulting collection.</param>
            <returns>
            an indexed collection where each item represents one line of the
            original string.
            </returns>
            <remarks>This might seem identical to the String.Split method at first, but it is not exactly, since this method
            recognizes line breaks in the three formats: "\n", "\r" and "\r\n". Note that any newline characters will not be present
            in the returned collection.</remarks></member>
        <member name="M:Plossum.StringFormatter.GetWordCount(System.String)">
            <summary>
            Retrieves the number of words in the specified string.
            </summary>
            <param name="str">The string in which to count the words.</param>
            <returns>The number of words in the specified string.</returns>
            <remarks>A <i>word</i> here is defined as any number (greater than zero) of non-whitespace characters, separated from
            other words by one or more white space characters.</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> was a null reference (<b>Nothing</b> in Visual Basic)</exception></member>
        <member name="M:Plossum.StringFormatter.FormatInColumns(System.Int32,System.Int32,Plossum.ColumnInfo[])">
            <summary>
            Formats several fixed width strings into columns of the specified widths, performing word wrapping and alignment as specified.
            </summary>
            <param name="indent">The indentation (number of white space characters) to use before the first column.</param>
            <param name="columnSpacing">The spacing to use in between columns.</param>
            <param name="columns">An array of the <see cref="T:Plossum.ColumnInfo" /> objects representing the columns to use.</param>
            <returns>A single string that when printed will represent the original strings formatted as specified in each <see cref="T:Plossum.ColumnInfo" />
            object.</returns>
            <exception cref="T:System.ArgumentNullException">A <see cref="P:Plossum.ColumnInfo.Content" /> for a column was a null reference (<b>Nothing</b> in Visual Basic)</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified <see cref="P:Plossum.ColumnInfo.Width" /> for a column was less than, or equal to zero.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="columnSpacing" /> was less than zero, or, <paramref name="indent" /> was less than
            zero, or, no columns were specified.</exception></member>
        <member name="T:Plossum.StringFormatter.OptimalWordWrappedString">
            <summary>
            Class performing an "optimal solution" word wrapping creating a somewhat more estetically pleasing layout.
            </summary>
            <remarks><para>This is based on the
            "optimal solution" as described on the Wikipedia page for "Word Wrap" (http://en.wikipedia.org/wiki/Word_wrap).
            The drawback of this method compared to the simple "greedy" technique is that this is much, much slower. However for
            short strings to print as console messages this will not be a problem, but using it in a WYSIWYG word processor is probably
            not a very good idea.</para></remarks></member>
        <member name="T:Plossum.Resources.PlossumStrings">
            <summary>
            A strongly-typed resource class, for looking up localized strings, etc.
            </summary></member>
        <member name="P:Plossum.Resources.PlossumStrings.ResourceManager">
            <summary>
            Returns the cached ResourceManager instance used by this class.
            </summary></member>
        <member name="P:Plossum.Resources.PlossumStrings.Culture">
            <summary>
            Overrides the current thread's CurrentUICulture property for all
            resource lookups using this strongly typed resource class.
            </summary></member>
        <member name="P:Plossum.Resources.PlossumStrings.CannotStartAsynchronousReadWhenSynchronousReadOperationIsInProgress">
            <summary>
            Looks up a localized string similar to Cannot start asynchronous read when synchronous read operation is in progress.
            </summary></member>
        <member name="P:Plossum.Resources.PlossumStrings.SeekingNotSupportedOnAnonymousPipes">
            <summary>
            Looks up a localized string similar to Seeking not supported on Anonymous Pipes.
            </summary></member>
    </members>
</doc>
